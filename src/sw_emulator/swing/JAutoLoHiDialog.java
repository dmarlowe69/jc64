/**
 * @(#)JAutoLoHiDialog.java 2021/08/06
 *
 * ICE Team free software group
 *
 * This file is part of JIIT64 Java Ice Team Tracker 64
 * See README for copyright notice.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
 */
package sw_emulator.swing;

import java.text.ParseException;
import javax.swing.JFormattedTextField.AbstractFormatter; 
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.text.DefaultFormatter; 
import javax.swing.text.DefaultFormatterFactory; 
import sw_emulator.software.MemoryDasm;

/**
 * Dialog for low/high table
 * 
 * @author stefano_tognon
 */
public class JAutoLoHiDialog extends javax.swing.JDialog {
    
  /** Memory dasm */
  private MemoryDasm[] memories;
    
  private static class HexFormatterFactory extends DefaultFormatterFactory { 
        @Override
        public AbstractFormatter getDefaultFormatter() { 
           return new HexFormatter(); 
       } 
  } 

  private static class HexFormatter extends DefaultFormatter { 
      @Override
      public Object stringToValue(String text) throws ParseException { 
         try { 
            return Long.valueOf(text, 16); 
         } catch (NumberFormatException nfe) { 
            throw new ParseException(text,0); 
         } 
     } 

      @Override
     public String valueToString(Object value) throws ParseException { 
        if (value instanceof Long)
             return Long.toHexString( 
              ((Long)value).intValue()).toUpperCase();  
        else return Integer.toHexString( 
              ((Integer)value).intValue()).toUpperCase(); 
     } 
 } 


  /**
   * Set memory dasm
   * 
   * @param memories the memories dasm to use
   */
  public void setUp(MemoryDasm[] memories) {
    this.memories=memories; 
  }
    /**
     * Creates new form JDialogAutoLoHi
     */
    public JAutoLoHiDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Shared.framesList.add(this);
        
        JSpinner.DefaultEditor editor = (JSpinner.DefaultEditor)jSpinnerStartLow.getEditor(); 
        editor.getTextField().setFormatterFactory(new HexFormatterFactory());  
        
        editor = (JSpinner.DefaultEditor)jSpinnerStartHigh.getEditor(); 
        editor.getTextField().setFormatterFactory(new HexFormatterFactory());
        
        editor = (JSpinner.DefaultEditor)jSpinnerEndLow.getEditor(); 
        editor.getTextField().setFormatterFactory(new HexFormatterFactory());
        
        editor = (JSpinner.DefaultEditor)jSpinnerEndHigh.getEditor(); 
        editor.getTextField().setFormatterFactory(new HexFormatterFactory());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButtonOk = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jSpinnerStartLow = new javax.swing.JSpinner();
        jLabelStartLo = new javax.swing.JLabel();
        jLabelStartHi = new javax.swing.JLabel();
        jSpinnerStartHigh = new javax.swing.JSpinner();
        jLabelEndLo = new javax.swing.JLabel();
        jSpinnerEndLow = new javax.swing.JSpinner();
        jLabelEndHigh = new javax.swing.JLabel();
        jSpinnerEndHigh = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tables automatic assigment");

        jLabel1.setText("Automatic assign low/high pointer from two tables");
        jPanel2.add(jLabel1);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jButtonOk.setText("OK");
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonOk);

        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonCancel);

        getContentPane().add(jPanel3, java.awt.BorderLayout.PAGE_END);

        jSpinnerStartLow.setModel(new javax.swing.SpinnerNumberModel(Long.valueOf(0L), Long.valueOf(0L), Long.valueOf(65535L), Long.valueOf(1L)));

        jLabelStartLo.setText("Starting of low values:");

        jLabelStartHi.setText("Starting of high values:");

        jSpinnerStartHigh.setModel(new javax.swing.SpinnerNumberModel(Long.valueOf(0L), Long.valueOf(0L), Long.valueOf(65535L), Long.valueOf(1L)));

        jLabelEndLo.setText("Ending of low values:");

        jSpinnerEndLow.setModel(new javax.swing.SpinnerNumberModel(Long.valueOf(0L), Long.valueOf(0L), Long.valueOf(65535L), Long.valueOf(1L)));

        jLabelEndHigh.setText("Ending of high values:");

        jSpinnerEndHigh.setModel(new javax.swing.SpinnerNumberModel(Long.valueOf(0L), Long.valueOf(0L), Long.valueOf(65535L), Long.valueOf(1L)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelStartLo, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerStartLow, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(jLabelStartHi, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerStartHigh, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelEndLo, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerEndLow, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(jLabelEndHigh, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerEndHigh, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinnerStartLow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelStartLo)
                    .addComponent(jSpinnerStartHigh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelStartHi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinnerEndLow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelEndLo)
                    .addComponent(jSpinnerEndHigh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelEndHigh))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed
      if (memories==null) return;
      
      long valStartLow=(Long)jSpinnerStartLow.getValue();
      long valStartHigh=(Long)jSpinnerStartHigh.getValue();
      long valEndLow=(Long)jSpinnerEndLow.getValue();
      long valEndHigh=(Long)jSpinnerEndHigh.getValue();
      
      if (valStartLow>valEndLow) {
        JOptionPane.showMessageDialog(this, "Low end position must be after low start position");
        return;
      }
      
      if (valStartHigh>valEndHigh) {
        JOptionPane.showMessageDialog(this, "High end position must be after high start position");
        return;
      } 
      
      if (valEndLow-valStartLow != valEndHigh-valStartHigh) {
        JOptionPane.showMessageDialog(this, "The size area from low and high must be equal");
        return;
      }
      
      if (valStartLow<valStartHigh && valEndLow>valStartHigh) {
        JOptionPane.showMessageDialog(this, "Starting high position cannot be inside low area");
        return;
      }
      
      if (valStartLow<valEndHigh && valEndLow>valEndHigh) {
        JOptionPane.showMessageDialog(this, "Ending high position cannot be inside low area");
        return;
      }      
      
      MemoryDasm low;
      MemoryDasm high;
      int position;
      
      // make the action
      for (long i=0; i<=valEndLow-valStartLow; i++) {
        low=memories[(int)(i+valStartLow)];
        high=memories[(int)(i+valStartHigh)];
        
        position=(low.copy & 0xFF)+((high.copy &0xFF)<<8);
        
        low.type='<';
        low.related=position;
        
        high.type='>';
        high.related=position;
      }
      
      setVisible(false);
    }//GEN-LAST:event_jButtonOkActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
     setVisible(false);
    }//GEN-LAST:event_jButtonCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JAutoLoHiDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JAutoLoHiDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JAutoLoHiDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JAutoLoHiDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JAutoLoHiDialog dialog = new JAutoLoHiDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelEndHigh;
    private javax.swing.JLabel jLabelEndLo;
    private javax.swing.JLabel jLabelStartHi;
    private javax.swing.JLabel jLabelStartLo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSpinner jSpinnerEndHigh;
    private javax.swing.JSpinner jSpinnerEndLow;
    private javax.swing.JSpinner jSpinnerStartHigh;
    private javax.swing.JSpinner jSpinnerStartLow;
    // End of variables declaration//GEN-END:variables
}
