/**
 * @(#)JDasmPanel 2022/05/02
 *
 * ICE Team free software group
 *
 * This file is part of C64 Java Software Emulator.
 * See README for copyright notice.
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
 *  02111-1307  USA.
 */
package sw_emulator.swing;

import sw_emulator.software.Assembler;
import sw_emulator.swing.main.Option;

/**
 * A panel for Dasm assembler option 
 * 
 * @author ice
 */
public class JDasmPanel extends javax.swing.JPanel {    
    /** Option file to use */
    Option option;

    /**
     * Creates new form JDasmPanel
     */
    public JDasmPanel() {
        initComponents();
    }
    
    /**
     * Set up the panel with the option 
     * 
     * @param option the option to use
     */
    public void setUp(Option option) {
      this.option=option;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupDasmLabel = new javax.swing.ButtonGroup();
        buttonGroupDasmByte = new javax.swing.ButtonGroup();
        buttonGroupDasmWord = new javax.swing.ButtonGroup();
        buttonGroupDasmComment = new javax.swing.ButtonGroup();
        buttonGroupDasmBlockComment = new javax.swing.ButtonGroup();
        buttonGroupDasmOrigin = new javax.swing.ButtonGroup();
        buttonGroupDasmStarting = new javax.swing.ButtonGroup();
        buttonGroupDasmMonoSprite = new javax.swing.ButtonGroup();
        buttonGroupDasmMultiSprite = new javax.swing.ButtonGroup();
        buttonGroupDasmTribyte = new javax.swing.ButtonGroup();
        buttonGroupDasmLong = new javax.swing.ButtonGroup();
        buttonGroupDasmNumText = new javax.swing.ButtonGroup();
        buttonGroupDasmAddress = new javax.swing.ButtonGroup();
        buttonGroupDasmStackWord = new javax.swing.ButtonGroup();
        buttonGroupDasmHighText = new javax.swing.ButtonGroup();
        buttonGroupDasmShiftText = new javax.swing.ButtonGroup();
        buttonGroupDasmScreenText = new javax.swing.ButtonGroup();
        buttonGroupDasmPetsciiText = new javax.swing.ButtonGroup();
        buttonGroupDasmWordSwapped = new javax.swing.ButtonGroup();
        buttonGroupDasmText = new javax.swing.ButtonGroup();
        buttonGroupDasmZeroText = new javax.swing.ButtonGroup();
        jCheckBoxDasmF3Comp = new javax.swing.JCheckBox();
        jLabelDasmByteDeclaration = new javax.swing.JLabel();
        jRadioButtonDasmDotByte = new javax.swing.JRadioButton();
        jRadioButtonDasmByte = new javax.swing.JRadioButton();
        jRadioButtonDasmDcByte = new javax.swing.JRadioButton();
        jLabelDasmLabelDeclaration = new javax.swing.JLabel();
        jRadioButtonDasmLabelName = new javax.swing.JRadioButton();
        jRadioButtonDasmLabelNameColon = new javax.swing.JRadioButton();
        jRadioButtonDasmDcBByte = new javax.swing.JRadioButton();
        jLabelDasmWordDeclaration = new javax.swing.JLabel();
        jRadioButtonDasmDotWord = new javax.swing.JRadioButton();
        jRadioButtonDasmWord = new javax.swing.JRadioButton();
        jRadioButtonDasmDcWWord = new javax.swing.JRadioButton();
        jScrollPaneDasmDotByte = new javax.swing.JScrollPane();
        jTextPaneDasmDotByte = new javax.swing.JTextPane();
        jScrollPaneDasmByte = new javax.swing.JScrollPane();
        jTextPaneDasmByte = new javax.swing.JTextPane();
        jScrollPaneDasmDcByte = new javax.swing.JScrollPane();
        jTextPaneDasmDcByte = new javax.swing.JTextPane();
        jScrollPaneDasmDCBByte = new javax.swing.JScrollPane();
        jTextPaneDasmDcBByte = new javax.swing.JTextPane();
        jScrollPaneDasmDotWord = new javax.swing.JScrollPane();
        jTextPaneDasmDotWord = new javax.swing.JTextPane();
        jScrollPaneDasmWord = new javax.swing.JScrollPane();
        jTextPaneDasmWord = new javax.swing.JTextPane();
        jScrollPaneDasmDcWWord = new javax.swing.JScrollPane();
        jTextPaneDasmDcWWord = new javax.swing.JTextPane();
        jScrollPaneDasmLabelName = new javax.swing.JScrollPane();
        jTextPaneDasmLabelName = new javax.swing.JTextPane();
        jScrollPaneDasmLabelNameColon = new javax.swing.JScrollPane();
        jTextPaneDasmLabelNameColon = new javax.swing.JTextPane();
        jLabelDasmCommentDeclaration = new javax.swing.JLabel();
        jRadioButtonDasmCstyleComment = new javax.swing.JRadioButton();
        jScrollPaneDasmLabelName1 = new javax.swing.JScrollPane();
        jTextPaneDasmSemicolonComment = new javax.swing.JTextPane();
        jRadioButtonDasmSemicolonComment = new javax.swing.JRadioButton();
        jScrollPaneDasmCstyleComment = new javax.swing.JScrollPane();
        jTextPaneDasmCstyleComment = new javax.swing.JTextPane();
        jLabelDasmBlockCommentDeclaration = new javax.swing.JLabel();
        jRadioButtonDasmSemicolonBlockComment = new javax.swing.JRadioButton();
        jScrollPaneDasmLabelName3 = new javax.swing.JScrollPane();
        jTextPaneDasmSemicolonBlockComment = new javax.swing.JTextPane();
        jRadioButtonDasmCstyleBlockComment = new javax.swing.JRadioButton();
        jScrollPaneDasmLabelName4 = new javax.swing.JScrollPane();
        jTextPaneDasmCstyleBlockComment = new javax.swing.JTextPane();
        jRadioButtonDasmIfBlockComment = new javax.swing.JRadioButton();
        jScrollPaneDasmLabelName5 = new javax.swing.JScrollPane();
        jTextPaneDasmIfBlockComment = new javax.swing.JTextPane();
        jLabelDasmOriginDeclaration = new javax.swing.JLabel();
        jRadioButtonDasmDotOrigin = new javax.swing.JRadioButton();
        jScrollPaneDasmLabelName8 = new javax.swing.JScrollPane();
        jTextPaneDasmDotOrigin = new javax.swing.JTextPane();
        jRadioButtonDasmOrigin = new javax.swing.JRadioButton();
        jScrollPaneDasmLabelName9 = new javax.swing.JScrollPane();
        jTextPaneDasmOrigin = new javax.swing.JTextPane();
        jLabelDasmStarting = new javax.swing.JLabel();
        jRadioButtonDasmProcStarting = new javax.swing.JRadioButton();
        jScrollPaneDasmLabelName15 = new javax.swing.JScrollPane();
        jTextPaneDasmProcStarting = new javax.swing.JTextPane();
        jLabelDasmMonoSpriteDeclaration = new javax.swing.JLabel();
        jRadioButtonDasmByteHexMonoSprite = new javax.swing.JRadioButton();
        jScrollPaneDasmByteHexMonoSprite = new javax.swing.JScrollPane();
        jTextPaneDasmByteHexMonoSprite = new javax.swing.JTextPane();
        jRadioButtonDasmByteBinMonoSprite = new javax.swing.JRadioButton();
        jScrollPaneDasmByteBinMonoSprite = new javax.swing.JScrollPane();
        jTextPaneDasmByteBinMonoSprite = new javax.swing.JTextPane();
        jRadioButtonDasmMacroHexMonoSprite = new javax.swing.JRadioButton();
        jScrollPaneDasmMacroHexMonoSprite = new javax.swing.JScrollPane();
        jTextPaneDasmMacroHexMonoSprite = new javax.swing.JTextPane();
        jRadioButtonDasmMacroBinMonoSprite = new javax.swing.JRadioButton();
        jScrollPaneDasmMacroBinMonoSprite = new javax.swing.JScrollPane();
        jTextPaneDasmMacroBinMonoSprite = new javax.swing.JTextPane();
        jLabelDasmMultiSpriteDeclaration = new javax.swing.JLabel();
        jRadioButtonDasmByteHexMultiSprite = new javax.swing.JRadioButton();
        jScrollPaneDasmByteHexMultiSprite = new javax.swing.JScrollPane();
        jTextPaneDasmByteHexMultiSprite = new javax.swing.JTextPane();
        jRadioButtonDasmByteBinMultiSprite = new javax.swing.JRadioButton();
        jScrollPaneDasmByteBinMultiSprite = new javax.swing.JScrollPane();
        jTextPaneDasmByteBinMultiSprite = new javax.swing.JTextPane();
        jRadioButtonDasmMacroHexMultiSprite = new javax.swing.JRadioButton();
        jScrollPaneDasmMacroHexMultiSprite = new javax.swing.JScrollPane();
        jTextPaneDasmMacroHexMultiSprite = new javax.swing.JTextPane();
        jRadioButtonDasmMacroBinMultiSprite = new javax.swing.JRadioButton();
        jScrollPaneDasmMacroBinMultiSprite = new javax.swing.JScrollPane();
        jTextPaneDasmMacroBinMultiSprite = new javax.swing.JTextPane();
        jLabelDasmTribyteDeclaration = new javax.swing.JLabel();
        jRadioButtonDasmMacroTribyte = new javax.swing.JRadioButton();
        jScrollPaneDasmMacroTribyte = new javax.swing.JScrollPane();
        jTextPaneDasmMacroTribyte = new javax.swing.JTextPane();
        jLabelDasmLongDeclaration = new javax.swing.JLabel();
        jRadioButtonDasmDotLong = new javax.swing.JRadioButton();
        jScrollPaneDasmDotLong = new javax.swing.JScrollPane();
        jTextPaneDasmDotLong = new javax.swing.JTextPane();
        jRadioButtonDasmLong = new javax.swing.JRadioButton();
        jScrollPaneDasmLong = new javax.swing.JScrollPane();
        jTextPaneDasmLong = new javax.swing.JTextPane();
        jRadioButtonDasmDcLLong = new javax.swing.JRadioButton();
        jScrollPaneDasmDcLLong = new javax.swing.JScrollPane();
        jTextPaneDasmDcLLong = new javax.swing.JTextPane();
        jLabelDasmWordSwappedDeclaration = new javax.swing.JLabel();
        jRadioButtonDasmDcDotSWordSwapped = new javax.swing.JRadioButton();
        jScrollPaneDasmDcDotSWordSwapped = new javax.swing.JScrollPane();
        jTextPaneDasmDcDotSWordSwapped = new javax.swing.JTextPane();
        jLabelDasmTextDeclaration = new javax.swing.JLabel();
        jRadioButtonDasmDotByteText = new javax.swing.JRadioButton();
        jScrollPaneDasmDotByteText = new javax.swing.JScrollPane();
        jTextPaneDasmDotByteText = new javax.swing.JTextPane();
        jRadioButtonDasmByteText = new javax.swing.JRadioButton();
        jScrollPaneDasmByteText = new javax.swing.JScrollPane();
        jTextPaneDasmByteText = new javax.swing.JTextPane();
        jRadioButtonDasmDcText = new javax.swing.JRadioButton();
        jScrollPaneDasmMacroHexMonoSprite1 = new javax.swing.JScrollPane();
        jTextPaneDasmDcText = new javax.swing.JTextPane();
        jRadioButtonDasmDcDotBText = new javax.swing.JRadioButton();
        jScrollPaneDasmDcDotBText = new javax.swing.JScrollPane();
        jTextPaneDasmDcDotBText = new javax.swing.JTextPane();
        jLabelDasmNumTextDeclaration = new javax.swing.JLabel();
        jRadioButtonDasmDotByteNumText = new javax.swing.JRadioButton();
        jScrollPaneDasmDotByteNumText = new javax.swing.JScrollPane();
        jTextPaneDasmDotByteNumText = new javax.swing.JTextPane();
        jRadioButtonDasmByteNumText = new javax.swing.JRadioButton();
        jScrollPaneDasmByteNumText = new javax.swing.JScrollPane();
        jTextPaneDasmByteNumText = new javax.swing.JTextPane();
        jRadioButtonDasmDcNumText = new javax.swing.JRadioButton();
        jScrollPaneDasmDcNumText = new javax.swing.JScrollPane();
        jTextPaneDasmDcNumText = new javax.swing.JTextPane();
        jRadioButtonDasmDcDotBNumText = new javax.swing.JRadioButton();
        jScrollPaneDasmDcDotBNumText = new javax.swing.JScrollPane();
        jTextPaneDasmDcDotBNumText = new javax.swing.JTextPane();
        jLabelDasmZeroTextDeclaration = new javax.swing.JLabel();
        jRadioButtonDasmDotByteZeroText = new javax.swing.JRadioButton();
        jScrollPaneDasmDotByteZeroText = new javax.swing.JScrollPane();
        jTextPaneDasmDotByteZeroText = new javax.swing.JTextPane();
        jRadioButtonDasmByteZeroText = new javax.swing.JRadioButton();
        jScrollPaneDasmByteZeroText = new javax.swing.JScrollPane();
        jTextPaneDasmByteZeroText = new javax.swing.JTextPane();
        jRadioButtonDasmDcZeroText = new javax.swing.JRadioButton();
        jScrollPaneDasmDcZeroText = new javax.swing.JScrollPane();
        jTextPaneDasmDcZeroText = new javax.swing.JTextPane();
        jRadioButtonDasmDcDotBZeroText = new javax.swing.JRadioButton();
        jScrollPaneDasmDcDotBZeroText = new javax.swing.JScrollPane();
        jTextPaneDasmDcDotBZeroText = new javax.swing.JTextPane();
        jLabelDasmAddressDeclaration = new javax.swing.JLabel();
        jRadioButtonDasmDotWordAddress = new javax.swing.JRadioButton();
        jScrollPaneDasmDotWordAddress = new javax.swing.JScrollPane();
        jTextPaneDasmDotWordAddress = new javax.swing.JTextPane();
        jRadioButtonDasmWordAddress = new javax.swing.JRadioButton();
        jScrollPaneDasmWordAddress = new javax.swing.JScrollPane();
        jTextPaneDasmWordAddress = new javax.swing.JTextPane();
        jRadioButtonDasmDcWWordAddress = new javax.swing.JRadioButton();
        jScrollPaneDasmDcWWordAddress = new javax.swing.JScrollPane();
        jTextPaneDasmDcWWordAddress = new javax.swing.JTextPane();
        jLabelDasmStackWordDeclaration = new javax.swing.JLabel();
        jRadioButtonDasmMacroStackWord = new javax.swing.JRadioButton();
        jScrollPaneDasmMacroStackWord = new javax.swing.JScrollPane();
        jTextPaneDasmMacroStackWord = new javax.swing.JTextPane();
        jLabelDasmHighTextDeclaration = new javax.swing.JLabel();
        jRadioButtonDasmDotByteHighText = new javax.swing.JRadioButton();
        jScrollPaneDasmDotByteHighText = new javax.swing.JScrollPane();
        jTextPaneDasmDotByteHighText = new javax.swing.JTextPane();
        jRadioButtonDasmByteHighText = new javax.swing.JRadioButton();
        jScrollPaneDasmByteHighText = new javax.swing.JScrollPane();
        jTextPaneDasmByteHighText = new javax.swing.JTextPane();
        jRadioButtonDasmDcHighText = new javax.swing.JRadioButton();
        jScrollPaneDasmDcZeroHighText = new javax.swing.JScrollPane();
        jTextPaneDasmDcZeroHighText = new javax.swing.JTextPane();
        jRadioButtonDasmDcDotBHighText = new javax.swing.JRadioButton();
        jScrollPaneDasmDcDotBHighText = new javax.swing.JScrollPane();
        jTextPaneDasmDcDotBHighText = new javax.swing.JTextPane();
        jLabelDasmShiftTextDeclaration = new javax.swing.JLabel();
        jRadioButtonDasmDotByteShiftText = new javax.swing.JRadioButton();
        jScrollPaneDasmDotByteShiftText = new javax.swing.JScrollPane();
        jTextPaneDasmDotByteShiftText = new javax.swing.JTextPane();
        jRadioButtonDasmByteShiftText = new javax.swing.JRadioButton();
        jScrollPaneDasmByteShiftText = new javax.swing.JScrollPane();
        jTextPaneDasmByteShiftText = new javax.swing.JTextPane();
        jRadioButtonDasmDcShiftText = new javax.swing.JRadioButton();
        jScrollPaneDasmDcZeroShiftText = new javax.swing.JScrollPane();
        jTextPaneDasmDcZeroShiftText = new javax.swing.JTextPane();
        jRadioButtonDasmDcDotBShiftText = new javax.swing.JRadioButton();
        jScrollPaneDasmDcDotBShiftText = new javax.swing.JScrollPane();
        jTextPaneDasmDcDotBShiftText = new javax.swing.JTextPane();
        jLabelDasmScreenTextDeclaration = new javax.swing.JLabel();
        jRadioButtonDasmDotByteScreenText = new javax.swing.JRadioButton();
        jScrollPaneDasmDotByteScreenText = new javax.swing.JScrollPane();
        jTextPaneDasmDotByteScreenText = new javax.swing.JTextPane();
        jRadioButtonDasmByteScreenText = new javax.swing.JRadioButton();
        jScrollPaneDasmByteScreenText = new javax.swing.JScrollPane();
        jTextPaneDasmByteScreenText = new javax.swing.JTextPane();
        jRadioButtonDasmDcScreentText = new javax.swing.JRadioButton();
        jScrollPaneDasmDcZeroScreenText = new javax.swing.JScrollPane();
        jTextPaneDasmDcZeroScreenText = new javax.swing.JTextPane();
        jRadioButtonDasmDcDotBScreenText = new javax.swing.JRadioButton();
        jScrollPaneDasmDcDotBScreenText = new javax.swing.JScrollPane();
        jTextPaneDasmDcDotBScreenText = new javax.swing.JTextPane();
        jLabelDasmPetasciiTextDeclaration = new javax.swing.JLabel();
        jRadioButtonDasmDotBytePetasciiText = new javax.swing.JRadioButton();
        jScrollPaneDasmDotBytePetasciiText = new javax.swing.JScrollPane();
        jTextPaneDasmDotBytePetasciiText = new javax.swing.JTextPane();
        jRadioButtonDasmBytePetasciiText = new javax.swing.JRadioButton();
        jScrollPaneDasmBytePetAsciiText = new javax.swing.JScrollPane();
        jTextPaneDasmBytePetasciiText = new javax.swing.JTextPane();
        jRadioButtonDasmDcPetasciiText = new javax.swing.JRadioButton();
        jScrollPaneDasmDcZeroPetasciiText = new javax.swing.JScrollPane();
        jTextPaneDasmDcZeroPetasciText = new javax.swing.JTextPane();
        jRadioButtonDasmDcDotBPetasciiText = new javax.swing.JRadioButton();
        jScrollPaneDasmDcDotBPetasciiText = new javax.swing.JScrollPane();
        jTextPaneDasmDcDotBPetasciText = new javax.swing.JTextPane();

        jCheckBoxDasmF3Comp.setText("Make source compatible with -f3 option");
        jCheckBoxDasmF3Comp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxDasmF3CompActionPerformed(evt);
            }
        });

        jLabelDasmByteDeclaration.setText("Byte:");

        buttonGroupDasmByte.add(jRadioButtonDasmDotByte);
        jRadioButtonDasmDotByte.setSelected(true);
        jRadioButtonDasmDotByte.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDotByteItemStateChanged(evt);
            }
        });

        buttonGroupDasmByte.add(jRadioButtonDasmByte);
        jRadioButtonDasmByte.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmByteItemStateChanged(evt);
            }
        });

        buttonGroupDasmByte.add(jRadioButtonDasmDcByte);
        jRadioButtonDasmDcByte.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDcByteItemStateChanged(evt);
            }
        });

        jLabelDasmLabelDeclaration.setText("Label:");

        buttonGroupDasmLabel.add(jRadioButtonDasmLabelName);
        jRadioButtonDasmLabelName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmLabelNameItemStateChanged(evt);
            }
        });

        buttonGroupDasmLabel.add(jRadioButtonDasmLabelNameColon);
        jRadioButtonDasmLabelNameColon.setSelected(true);
        jRadioButtonDasmLabelNameColon.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmLabelNameColonItemStateChanged(evt);
            }
        });

        buttonGroupDasmByte.add(jRadioButtonDasmDcBByte);
        jRadioButtonDasmDcBByte.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDcBByteItemStateChanged(evt);
            }
        });

        jLabelDasmWordDeclaration.setText("Word:");

        buttonGroupDasmWord.add(jRadioButtonDasmDotWord);
        jRadioButtonDasmDotWord.setSelected(true);
        jRadioButtonDasmDotWord.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDotWordItemStateChanged(evt);
            }
        });

        buttonGroupDasmWord.add(jRadioButtonDasmWord);
        jRadioButtonDasmWord.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmWordItemStateChanged(evt);
            }
        });

        buttonGroupDasmWord.add(jRadioButtonDasmDcWWord);
        jRadioButtonDasmDcWWord.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDcWWordItemStateChanged(evt);
            }
        });

        jScrollPaneDasmDotByte.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmDotByte.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDotByte.setEditable(false);
        jTextPaneDasmDotByte.setContentType("text/html"); // NOI18N
        jTextPaneDasmDotByte.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> .byte</b> <font color='red'>$xx</font><br>\n     <b> .byte</b> <font color='blue'>dd</font><br>\n     <b> .byte</b> <font color='green'>%bb</font><br>\n     <b> .byte</b> <font color='purple'>'c</font>\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmDotByte.setViewportView(jTextPaneDasmDotByte);

        jScrollPaneDasmByte.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmByte.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmByte.setEditable(false);
        jTextPaneDasmByte.setContentType("text/html"); // NOI18N
        jTextPaneDasmByte.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> byte</b> <font color='red'>$xx</font><br>\n     <b> byte</b> <font color='blue'>dd</font><br>\n     <b> byte</b> <font color='green'>%bb</font><br>\n     <b> byte</b> <font color='purple'>'c</font>\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmByte.setViewportView(jTextPaneDasmByte);

        jScrollPaneDasmDcByte.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmDcByte.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDcByte.setEditable(false);
        jTextPaneDasmDcByte.setContentType("text/html"); // NOI18N
        jTextPaneDasmDcByte.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> dc</b> <font color='red'>$xx</font><br>\n     <b> dc</b> <font color='blue'>dd</font><br>\n     <b> dc</b> <font color='green'>%bb</font><br>\n     <b> dc</b> <font color='purple'>'c</font>\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmDcByte.setViewportView(jTextPaneDasmDcByte);

        jScrollPaneDasmDCBByte.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmDCBByte.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDcBByte.setEditable(false);
        jTextPaneDasmDcBByte.setContentType("text/html"); // NOI18N
        jTextPaneDasmDcBByte.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> dc.b</b> <font color='red'>$xx</font><br>\n     <b> dc.b</b> <font color='blue'>dd</font><br>\n     <b> dc.b</b> <font color='green'>%bb</font><br>\n     <b> dc.b</b> <font color='purple'>'c</font>\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmDCBByte.setViewportView(jTextPaneDasmDcBByte);

        jScrollPaneDasmDotWord.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmDotWord.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDotWord.setEditable(false);
        jTextPaneDasmDotWord.setContentType("text/html"); // NOI18N
        jTextPaneDasmDotWord.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> .word</b> <font color='red'>$xxyy</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmDotWord.setViewportView(jTextPaneDasmDotWord);

        jScrollPaneDasmWord.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmWord.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmWord.setEditable(false);
        jTextPaneDasmWord.setContentType("text/html"); // NOI18N
        jTextPaneDasmWord.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> word</b> <font color='red'>$xxyy</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmWord.setViewportView(jTextPaneDasmWord);

        jScrollPaneDasmDcWWord.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmDcWWord.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDcWWord.setEditable(false);
        jTextPaneDasmDcWWord.setContentType("text/html"); // NOI18N
        jTextPaneDasmDcWWord.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> dc.w</b> <font color='red'>$xxyy</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmDcWWord.setViewportView(jTextPaneDasmDcWWord);

        jScrollPaneDasmLabelName.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmLabelName.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmLabelName.setEditable(false);
        jTextPaneDasmLabelName.setContentType("text/html"); // NOI18N
        jTextPaneDasmLabelName.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n     <font color='black'>zzzz</font>\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmLabelName.setViewportView(jTextPaneDasmLabelName);

        jScrollPaneDasmLabelNameColon.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmLabelNameColon.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmLabelNameColon.setEditable(false);
        jTextPaneDasmLabelNameColon.setContentType("text/html"); // NOI18N
        jTextPaneDasmLabelNameColon.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n     <font color='black'>zzzz</font><b>:</b>\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmLabelNameColon.setViewportView(jTextPaneDasmLabelNameColon);

        jLabelDasmCommentDeclaration.setText("Comment:");

        buttonGroupDasmComment.add(jRadioButtonDasmCstyleComment);
        jRadioButtonDasmCstyleComment.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmCstyleCommentItemStateChanged(evt);
            }
        });

        jScrollPaneDasmLabelName1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmLabelName1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmSemicolonComment.setEditable(false);
        jTextPaneDasmSemicolonComment.setContentType("text/html"); // NOI18N
        jTextPaneDasmSemicolonComment.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n     <b>;</b> xxx\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmLabelName1.setViewportView(jTextPaneDasmSemicolonComment);

        buttonGroupDasmComment.add(jRadioButtonDasmSemicolonComment);
        jRadioButtonDasmSemicolonComment.setSelected(true);
        jRadioButtonDasmSemicolonComment.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmSemicolonCommentItemStateChanged(evt);
            }
        });

        jScrollPaneDasmCstyleComment.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmCstyleComment.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmCstyleComment.setEditable(false);
        jTextPaneDasmCstyleComment.setContentType("text/html"); // NOI18N
        jTextPaneDasmCstyleComment.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n     <b>/*</b> xxx <b'>*/</b>\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmCstyleComment.setViewportView(jTextPaneDasmCstyleComment);

        jLabelDasmBlockCommentDeclaration.setText("Block Comment:");

        buttonGroupDasmBlockComment.add(jRadioButtonDasmSemicolonBlockComment);
        jRadioButtonDasmSemicolonBlockComment.setSelected(true);
        jRadioButtonDasmSemicolonBlockComment.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmSemicolonBlockCommentItemStateChanged(evt);
            }
        });

        jScrollPaneDasmLabelName3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmLabelName3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmSemicolonBlockComment.setEditable(false);
        jTextPaneDasmSemicolonBlockComment.setContentType("text/html"); // NOI18N
        jTextPaneDasmSemicolonBlockComment.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n     <b>;</b> xxx\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmLabelName3.setViewportView(jTextPaneDasmSemicolonBlockComment);

        buttonGroupDasmBlockComment.add(jRadioButtonDasmCstyleBlockComment);
        jRadioButtonDasmCstyleBlockComment.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmCstyleBlockCommentItemStateChanged(evt);
            }
        });

        jScrollPaneDasmLabelName4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmLabelName4.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmCstyleBlockComment.setEditable(false);
        jTextPaneDasmCstyleBlockComment.setContentType("text/html"); // NOI18N
        jTextPaneDasmCstyleBlockComment.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n     <b>/*</b> xxx <b'>*/</b>\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmLabelName4.setViewportView(jTextPaneDasmCstyleBlockComment);

        buttonGroupDasmBlockComment.add(jRadioButtonDasmIfBlockComment);
        jRadioButtonDasmIfBlockComment.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmIfBlockCommentItemStateChanged(evt);
            }
        });

        jScrollPaneDasmLabelName5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmLabelName5.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmIfBlockComment.setEditable(false);
        jTextPaneDasmIfBlockComment.setContentType("text/html"); // NOI18N
        jTextPaneDasmIfBlockComment.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n     <b>if 0</b> xxx <b'>endif</b>\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmLabelName5.setViewportView(jTextPaneDasmIfBlockComment);

        jLabelDasmOriginDeclaration.setText("Origin:");

        buttonGroupDasmOrigin.add(jRadioButtonDasmDotOrigin);
        jRadioButtonDasmDotOrigin.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDotOriginItemStateChanged(evt);
            }
        });

        jScrollPaneDasmLabelName8.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmLabelName8.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDotOrigin.setEditable(false);
        jTextPaneDasmDotOrigin.setContentType("text/html"); // NOI18N
        jTextPaneDasmDotOrigin.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n     <b>.org</b> $xxyy\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmLabelName8.setViewportView(jTextPaneDasmDotOrigin);

        buttonGroupDasmOrigin.add(jRadioButtonDasmOrigin);
        jRadioButtonDasmOrigin.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmOriginItemStateChanged(evt);
            }
        });

        jScrollPaneDasmLabelName9.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmLabelName9.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmOrigin.setEditable(false);
        jTextPaneDasmOrigin.setContentType("text/html"); // NOI18N
        jTextPaneDasmOrigin.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n     <b>org</b> $xxyy\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmLabelName9.setViewportView(jTextPaneDasmOrigin);

        jLabelDasmStarting.setText("Starting:");

        buttonGroupDasmStarting.add(jRadioButtonDasmProcStarting);
        jRadioButtonDasmProcStarting.setSelected(true);
        jRadioButtonDasmProcStarting.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmProcStartingItemStateChanged(evt);
            }
        });

        jScrollPaneDasmLabelName15.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmLabelName15.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmProcStarting.setEditable(false);
        jTextPaneDasmProcStarting.setContentType("text/html"); // NOI18N
        jTextPaneDasmProcStarting.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n     <b>processor</b> 6502\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmLabelName15.setViewportView(jTextPaneDasmProcStarting);

        jLabelDasmMonoSpriteDeclaration.setText("Monocolor sprite:");

        buttonGroupDasmMonoSprite.add(jRadioButtonDasmByteHexMonoSprite);
        jRadioButtonDasmByteHexMonoSprite.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmByteHexMonoSpriteItemStateChanged(evt);
            }
        });

        jScrollPaneDasmByteHexMonoSprite.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmByteHexMonoSprite.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmByteHexMonoSprite.setEditable(false);
        jTextPaneDasmByteHexMonoSprite.setContentType("text/html"); // NOI18N
        jTextPaneDasmByteHexMonoSprite.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> [byte]</b> <font color='red'>$xx..</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmByteHexMonoSprite.setViewportView(jTextPaneDasmByteHexMonoSprite);

        buttonGroupDasmMonoSprite.add(jRadioButtonDasmByteBinMonoSprite);
        jRadioButtonDasmByteBinMonoSprite.setSelected(true);
        jRadioButtonDasmByteBinMonoSprite.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmByteBinMonoSpriteItemStateChanged(evt);
            }
        });

        jScrollPaneDasmByteBinMonoSprite.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmByteBinMonoSprite.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmByteBinMonoSprite.setEditable(false);
        jTextPaneDasmByteBinMonoSprite.setContentType("text/html"); // NOI18N
        jTextPaneDasmByteBinMonoSprite.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>[byte]</b> <font color='red'>%b..</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmByteBinMonoSprite.setViewportView(jTextPaneDasmByteBinMonoSprite);

        buttonGroupDasmMonoSprite.add(jRadioButtonDasmMacroHexMonoSprite);
        jRadioButtonDasmMacroHexMonoSprite.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmMacroHexMonoSpriteItemStateChanged(evt);
            }
        });

        jScrollPaneDasmMacroHexMonoSprite.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmMacroHexMonoSprite.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmMacroHexMonoSprite.setEditable(false);
        jTextPaneDasmMacroHexMonoSprite.setContentType("text/html"); // NOI18N
        jTextPaneDasmMacroHexMonoSprite.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>[.mac] </b> <font color='red'>$xx..</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmMacroHexMonoSprite.setViewportView(jTextPaneDasmMacroHexMonoSprite);

        buttonGroupDasmMonoSprite.add(jRadioButtonDasmMacroBinMonoSprite);
        jRadioButtonDasmMacroBinMonoSprite.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmMacroBinMonoSpriteItemStateChanged(evt);
            }
        });

        jScrollPaneDasmMacroBinMonoSprite.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmMacroBinMonoSprite.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmMacroBinMonoSprite.setEditable(false);
        jTextPaneDasmMacroBinMonoSprite.setContentType("text/html"); // NOI18N
        jTextPaneDasmMacroBinMonoSprite.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>[.mac] </b> <font color='red'>%b..</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmMacroBinMonoSprite.setViewportView(jTextPaneDasmMacroBinMonoSprite);

        jLabelDasmMultiSpriteDeclaration.setText("Multicolor sprite:");

        buttonGroupDasmMultiSprite.add(jRadioButtonDasmByteHexMultiSprite);
        jRadioButtonDasmByteHexMultiSprite.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmByteHexMultiSpriteItemStateChanged(evt);
            }
        });

        jScrollPaneDasmByteHexMultiSprite.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmByteHexMultiSprite.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmByteHexMultiSprite.setEditable(false);
        jTextPaneDasmByteHexMultiSprite.setContentType("text/html"); // NOI18N
        jTextPaneDasmByteHexMultiSprite.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> [byte]</b> <font color='red'>$xx..</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmByteHexMultiSprite.setViewportView(jTextPaneDasmByteHexMultiSprite);

        buttonGroupDasmMultiSprite.add(jRadioButtonDasmByteBinMultiSprite);
        jRadioButtonDasmByteBinMultiSprite.setSelected(true);
        jRadioButtonDasmByteBinMultiSprite.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmByteBinMultiSpriteItemStateChanged(evt);
            }
        });

        jScrollPaneDasmByteBinMultiSprite.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmByteBinMultiSprite.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmByteBinMultiSprite.setEditable(false);
        jTextPaneDasmByteBinMultiSprite.setContentType("text/html"); // NOI18N
        jTextPaneDasmByteBinMultiSprite.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>[byte]</b> <font color='red'>%b..</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmByteBinMultiSprite.setViewportView(jTextPaneDasmByteBinMultiSprite);

        buttonGroupDasmMultiSprite.add(jRadioButtonDasmMacroHexMultiSprite);
        jRadioButtonDasmMacroHexMultiSprite.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmMacroHexMultiSpriteItemStateChanged(evt);
            }
        });

        jScrollPaneDasmMacroHexMultiSprite.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmMacroHexMultiSprite.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmMacroHexMultiSprite.setEditable(false);
        jTextPaneDasmMacroHexMultiSprite.setContentType("text/html"); // NOI18N
        jTextPaneDasmMacroHexMultiSprite.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>[.mac] </b> <font color='red'>$xx..</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmMacroHexMultiSprite.setViewportView(jTextPaneDasmMacroHexMultiSprite);

        buttonGroupDasmMultiSprite.add(jRadioButtonDasmMacroBinMultiSprite);
        jRadioButtonDasmMacroBinMultiSprite.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmMacroBinMultiSpriteItemStateChanged(evt);
            }
        });

        jScrollPaneDasmMacroBinMultiSprite.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmMacroBinMultiSprite.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmMacroBinMultiSprite.setEditable(false);
        jTextPaneDasmMacroBinMultiSprite.setContentType("text/html"); // NOI18N
        jTextPaneDasmMacroBinMultiSprite.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>[.mac] </b> <font color='red'>%b..</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmMacroBinMultiSprite.setViewportView(jTextPaneDasmMacroBinMultiSprite);

        jLabelDasmTribyteDeclaration.setText("Tribyte:");

        buttonGroupDasmTribyte.add(jRadioButtonDasmMacroTribyte);
        jRadioButtonDasmMacroTribyte.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmMacroTribyteItemStateChanged(evt);
            }
        });

        jScrollPaneDasmMacroTribyte.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmMacroTribyte.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmMacroTribyte.setEditable(false);
        jTextPaneDasmMacroTribyte.setContentType("text/html"); // NOI18N
        jTextPaneDasmMacroTribyte.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>[.mac]</b> <font color='red'>$xxyyzz</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmMacroTribyte.setViewportView(jTextPaneDasmMacroTribyte);

        jLabelDasmLongDeclaration.setText("Long:");

        buttonGroupDasmTribyte.add(jRadioButtonDasmDotLong);
        jRadioButtonDasmDotLong.setSelected(true);
        jRadioButtonDasmDotLong.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDotLongItemStateChanged(evt);
            }
        });

        jScrollPaneDasmDotLong.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmDotLong.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDotLong.setEditable(false);
        jTextPaneDasmDotLong.setContentType("text/html"); // NOI18N
        jTextPaneDasmDotLong.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> .long</b> <font color='red'>$xxyyzzkk</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmDotLong.setViewportView(jTextPaneDasmDotLong);

        buttonGroupDasmTribyte.add(jRadioButtonDasmLong);
        jRadioButtonDasmLong.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmLongItemStateChanged(evt);
            }
        });

        jScrollPaneDasmLong.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmLong.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmLong.setEditable(false);
        jTextPaneDasmLong.setContentType("text/html"); // NOI18N
        jTextPaneDasmLong.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> long</b> <font color='red'>$xxyyzzkk</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmLong.setViewportView(jTextPaneDasmLong);

        buttonGroupDasmTribyte.add(jRadioButtonDasmDcLLong);
        jRadioButtonDasmDcLLong.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDcLLongItemStateChanged(evt);
            }
        });

        jScrollPaneDasmDcLLong.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmDcLLong.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDcLLong.setEditable(false);
        jTextPaneDasmDcLLong.setContentType("text/html"); // NOI18N
        jTextPaneDasmDcLLong.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> dc.l</b> <font color='red'>$xxyyzzkk</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmDcLLong.setViewportView(jTextPaneDasmDcLLong);

        jLabelDasmWordSwappedDeclaration.setText("Word swapped:");

        buttonGroupDasmWordSwapped.add(jRadioButtonDasmDcDotSWordSwapped);
        jRadioButtonDasmDcDotSWordSwapped.setSelected(true);
        jRadioButtonDasmDcDotSWordSwapped.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDcDotSWordSwappedItemStateChanged(evt);
            }
        });

        jScrollPaneDasmDcDotSWordSwapped.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmDcDotSWordSwapped.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDcDotSWordSwapped.setEditable(false);
        jTextPaneDasmDcDotSWordSwapped.setContentType("text/html"); // NOI18N
        jTextPaneDasmDcDotSWordSwapped.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> .dc.s</b> <font color='red'>$yyxx</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmDcDotSWordSwapped.setViewportView(jTextPaneDasmDcDotSWordSwapped);

        jLabelDasmTextDeclaration.setText("Text:");

        buttonGroupDasmText.add(jRadioButtonDasmDotByteText);
        jRadioButtonDasmDotByteText.setSelected(true);
        jRadioButtonDasmDotByteText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDotByteTextItemStateChanged(evt);
            }
        });

        jScrollPaneDasmDotByteText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmDotByteText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDotByteText.setEditable(false);
        jTextPaneDasmDotByteText.setContentType("text/html"); // NOI18N
        jTextPaneDasmDotByteText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> .byte</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmDotByteText.setViewportView(jTextPaneDasmDotByteText);

        buttonGroupDasmText.add(jRadioButtonDasmByteText);
        jRadioButtonDasmByteText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmByteTextItemStateChanged(evt);
            }
        });

        jScrollPaneDasmByteText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmByteText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmByteText.setEditable(false);
        jTextPaneDasmByteText.setContentType("text/html"); // NOI18N
        jTextPaneDasmByteText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>byte</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmByteText.setViewportView(jTextPaneDasmByteText);

        buttonGroupDasmText.add(jRadioButtonDasmDcText);
        jRadioButtonDasmDcText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDcTextItemStateChanged(evt);
            }
        });

        jScrollPaneDasmMacroHexMonoSprite1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmMacroHexMonoSprite1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDcText.setEditable(false);
        jTextPaneDasmDcText.setContentType("text/html"); // NOI18N
        jTextPaneDasmDcText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>dc</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmMacroHexMonoSprite1.setViewportView(jTextPaneDasmDcText);

        buttonGroupDasmText.add(jRadioButtonDasmDcDotBText);
        jRadioButtonDasmDcDotBText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDcDotBTextItemStateChanged(evt);
            }
        });

        jScrollPaneDasmDcDotBText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmDcDotBText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDcDotBText.setEditable(false);
        jTextPaneDasmDcDotBText.setContentType("text/html"); // NOI18N
        jTextPaneDasmDcDotBText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>dc.b</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmDcDotBText.setViewportView(jTextPaneDasmDcDotBText);

        jLabelDasmNumTextDeclaration.setText("Text #num chars:");

        buttonGroupDasmNumText.add(jRadioButtonDasmDotByteNumText);
        jRadioButtonDasmDotByteNumText.setSelected(true);
        jRadioButtonDasmDotByteNumText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDotByteNumTextItemStateChanged(evt);
            }
        });

        jScrollPaneDasmDotByteNumText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmDotByteNumText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDotByteNumText.setEditable(false);
        jTextPaneDasmDotByteNumText.setContentType("text/html"); // NOI18N
        jTextPaneDasmDotByteNumText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> .byte</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmDotByteNumText.setViewportView(jTextPaneDasmDotByteNumText);

        buttonGroupDasmNumText.add(jRadioButtonDasmByteNumText);
        jRadioButtonDasmByteNumText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmByteNumTextItemStateChanged(evt);
            }
        });

        jScrollPaneDasmByteNumText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmByteNumText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmByteNumText.setEditable(false);
        jTextPaneDasmByteNumText.setContentType("text/html"); // NOI18N
        jTextPaneDasmByteNumText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>byte</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmByteNumText.setViewportView(jTextPaneDasmByteNumText);

        buttonGroupDasmNumText.add(jRadioButtonDasmDcNumText);
        jRadioButtonDasmDcNumText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDcNumTextItemStateChanged(evt);
            }
        });

        jScrollPaneDasmDcNumText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmDcNumText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDcNumText.setEditable(false);
        jTextPaneDasmDcNumText.setContentType("text/html"); // NOI18N
        jTextPaneDasmDcNumText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>dc</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmDcNumText.setViewportView(jTextPaneDasmDcNumText);

        buttonGroupDasmNumText.add(jRadioButtonDasmDcDotBNumText);
        jRadioButtonDasmDcDotBNumText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDcDotBNumTextItemStateChanged(evt);
            }
        });

        jScrollPaneDasmDcDotBNumText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmDcDotBNumText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDcDotBNumText.setEditable(false);
        jTextPaneDasmDcDotBNumText.setContentType("text/html"); // NOI18N
        jTextPaneDasmDcDotBNumText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>dc.b</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmDcDotBNumText.setViewportView(jTextPaneDasmDcDotBNumText);

        jLabelDasmZeroTextDeclaration.setText("Text 0 terminated:");

        buttonGroupDasmZeroText.add(jRadioButtonDasmDotByteZeroText);
        jRadioButtonDasmDotByteZeroText.setSelected(true);
        jRadioButtonDasmDotByteZeroText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDotByteZeroTextItemStateChanged(evt);
            }
        });

        jScrollPaneDasmDotByteZeroText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmDotByteZeroText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDotByteZeroText.setEditable(false);
        jTextPaneDasmDotByteZeroText.setContentType("text/html"); // NOI18N
        jTextPaneDasmDotByteZeroText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> .byte</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmDotByteZeroText.setViewportView(jTextPaneDasmDotByteZeroText);

        buttonGroupDasmZeroText.add(jRadioButtonDasmByteZeroText);
        jRadioButtonDasmByteZeroText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmByteZeroTextItemStateChanged(evt);
            }
        });

        jScrollPaneDasmByteZeroText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmByteZeroText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmByteZeroText.setEditable(false);
        jTextPaneDasmByteZeroText.setContentType("text/html"); // NOI18N
        jTextPaneDasmByteZeroText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>byte</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmByteZeroText.setViewportView(jTextPaneDasmByteZeroText);

        buttonGroupDasmZeroText.add(jRadioButtonDasmDcZeroText);
        jRadioButtonDasmDcZeroText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDcZeroTextItemStateChanged(evt);
            }
        });

        jScrollPaneDasmDcZeroText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmDcZeroText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDcZeroText.setEditable(false);
        jTextPaneDasmDcZeroText.setContentType("text/html"); // NOI18N
        jTextPaneDasmDcZeroText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>dc</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmDcZeroText.setViewportView(jTextPaneDasmDcZeroText);

        buttonGroupDasmZeroText.add(jRadioButtonDasmDcDotBZeroText);
        jRadioButtonDasmDcDotBZeroText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDcDotBZeroTextItemStateChanged(evt);
            }
        });

        jScrollPaneDasmDcDotBZeroText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmDcDotBZeroText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDcDotBZeroText.setEditable(false);
        jTextPaneDasmDcDotBZeroText.setContentType("text/html"); // NOI18N
        jTextPaneDasmDcDotBZeroText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>dc.b</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmDcDotBZeroText.setViewportView(jTextPaneDasmDcDotBZeroText);

        jLabelDasmAddressDeclaration.setText("Address:");

        buttonGroupDasmAddress.add(jRadioButtonDasmDotWordAddress);
        jRadioButtonDasmDotWordAddress.setSelected(true);
        jRadioButtonDasmDotWordAddress.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDotWordAddressItemStateChanged(evt);
            }
        });

        jScrollPaneDasmDotWordAddress.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmDotWordAddress.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDotWordAddress.setEditable(false);
        jTextPaneDasmDotWordAddress.setContentType("text/html"); // NOI18N
        jTextPaneDasmDotWordAddress.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> .word</b> <font color='red'>$xxyy</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmDotWordAddress.setViewportView(jTextPaneDasmDotWordAddress);

        buttonGroupDasmAddress.add(jRadioButtonDasmWordAddress);
        jRadioButtonDasmWordAddress.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmWordAddressItemStateChanged(evt);
            }
        });

        jScrollPaneDasmWordAddress.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmWordAddress.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmWordAddress.setEditable(false);
        jTextPaneDasmWordAddress.setContentType("text/html"); // NOI18N
        jTextPaneDasmWordAddress.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> word</b> <font color='red'>$xxyy</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmWordAddress.setViewportView(jTextPaneDasmWordAddress);

        buttonGroupDasmAddress.add(jRadioButtonDasmDcWWordAddress);
        jRadioButtonDasmDcWWordAddress.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDcWWordAddressItemStateChanged(evt);
            }
        });

        jScrollPaneDasmDcWWordAddress.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmDcWWordAddress.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDcWWordAddress.setEditable(false);
        jTextPaneDasmDcWWordAddress.setContentType("text/html"); // NOI18N
        jTextPaneDasmDcWWordAddress.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> dc.w</b> <font color='red'>$xxyy</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmDcWWordAddress.setViewportView(jTextPaneDasmDcWWordAddress);

        jLabelDasmStackWordDeclaration.setText("Stack Word:");

        buttonGroupDasmStackWord.add(jRadioButtonDasmMacroStackWord);
        jRadioButtonDasmMacroStackWord.setSelected(true);
        jRadioButtonDasmMacroStackWord.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmMacroStackWordItemStateChanged(evt);
            }
        });

        jScrollPaneDasmMacroStackWord.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmMacroStackWord.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmMacroStackWord.setEditable(false);
        jTextPaneDasmMacroStackWord.setContentType("text/html"); // NOI18N
        jTextPaneDasmMacroStackWord.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>[.mac]</b> <font color='red'>$xxyy</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmMacroStackWord.setViewportView(jTextPaneDasmMacroStackWord);

        jLabelDasmHighTextDeclaration.setText("Text '1' terminated:");

        buttonGroupDasmHighText.add(jRadioButtonDasmDotByteHighText);
        jRadioButtonDasmDotByteHighText.setSelected(true);
        jRadioButtonDasmDotByteHighText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDotByteHighTextItemStateChanged(evt);
            }
        });

        jScrollPaneDasmDotByteHighText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmDotByteHighText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDotByteHighText.setEditable(false);
        jTextPaneDasmDotByteHighText.setContentType("text/html"); // NOI18N
        jTextPaneDasmDotByteHighText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> .byte</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmDotByteHighText.setViewportView(jTextPaneDasmDotByteHighText);

        buttonGroupDasmHighText.add(jRadioButtonDasmByteHighText);
        jRadioButtonDasmByteHighText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmByteHighTextItemStateChanged(evt);
            }
        });

        jScrollPaneDasmByteHighText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmByteHighText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmByteHighText.setEditable(false);
        jTextPaneDasmByteHighText.setContentType("text/html"); // NOI18N
        jTextPaneDasmByteHighText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>byte</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmByteHighText.setViewportView(jTextPaneDasmByteHighText);

        buttonGroupDasmHighText.add(jRadioButtonDasmDcHighText);
        jRadioButtonDasmDcHighText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDcHighTextItemStateChanged(evt);
            }
        });

        jScrollPaneDasmDcZeroHighText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmDcZeroHighText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDcZeroHighText.setEditable(false);
        jTextPaneDasmDcZeroHighText.setContentType("text/html"); // NOI18N
        jTextPaneDasmDcZeroHighText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>dc</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmDcZeroHighText.setViewportView(jTextPaneDasmDcZeroHighText);

        buttonGroupDasmHighText.add(jRadioButtonDasmDcDotBHighText);
        jRadioButtonDasmDcDotBHighText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDcDotBHighTextItemStateChanged(evt);
            }
        });

        jScrollPaneDasmDcDotBHighText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmDcDotBHighText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDcDotBHighText.setEditable(false);
        jTextPaneDasmDcDotBHighText.setContentType("text/html"); // NOI18N
        jTextPaneDasmDcDotBHighText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>dc.b</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmDcDotBHighText.setViewportView(jTextPaneDasmDcDotBHighText);

        jLabelDasmShiftTextDeclaration.setText("Text left shifted:");

        buttonGroupDasmShiftText.add(jRadioButtonDasmDotByteShiftText);
        jRadioButtonDasmDotByteShiftText.setSelected(true);
        jRadioButtonDasmDotByteShiftText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDotByteShiftTextItemStateChanged(evt);
            }
        });

        jScrollPaneDasmDotByteShiftText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmDotByteShiftText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDotByteShiftText.setEditable(false);
        jTextPaneDasmDotByteShiftText.setContentType("text/html"); // NOI18N
        jTextPaneDasmDotByteShiftText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> .byte</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmDotByteShiftText.setViewportView(jTextPaneDasmDotByteShiftText);

        buttonGroupDasmShiftText.add(jRadioButtonDasmByteShiftText);
        jRadioButtonDasmByteShiftText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmByteShiftTextItemStateChanged(evt);
            }
        });

        jScrollPaneDasmByteShiftText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmByteShiftText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmByteShiftText.setEditable(false);
        jTextPaneDasmByteShiftText.setContentType("text/html"); // NOI18N
        jTextPaneDasmByteShiftText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>byte</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmByteShiftText.setViewportView(jTextPaneDasmByteShiftText);

        buttonGroupDasmShiftText.add(jRadioButtonDasmDcShiftText);
        jRadioButtonDasmDcShiftText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDcShiftTextItemStateChanged(evt);
            }
        });

        jScrollPaneDasmDcZeroShiftText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmDcZeroShiftText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDcZeroShiftText.setEditable(false);
        jTextPaneDasmDcZeroShiftText.setContentType("text/html"); // NOI18N
        jTextPaneDasmDcZeroShiftText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>dc</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmDcZeroShiftText.setViewportView(jTextPaneDasmDcZeroShiftText);

        buttonGroupDasmShiftText.add(jRadioButtonDasmDcDotBShiftText);
        jRadioButtonDasmDcDotBShiftText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDcDotBShiftTextItemStateChanged(evt);
            }
        });

        jScrollPaneDasmDcDotBShiftText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmDcDotBShiftText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDcDotBShiftText.setEditable(false);
        jTextPaneDasmDcDotBShiftText.setContentType("text/html"); // NOI18N
        jTextPaneDasmDcDotBShiftText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>dc.b</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmDcDotBShiftText.setViewportView(jTextPaneDasmDcDotBShiftText);

        jLabelDasmScreenTextDeclaration.setText("Text to screen code:");

        buttonGroupDasmScreenText.add(jRadioButtonDasmDotByteScreenText);
        jRadioButtonDasmDotByteScreenText.setSelected(true);
        jRadioButtonDasmDotByteScreenText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDotByteScreenTextItemStateChanged(evt);
            }
        });

        jScrollPaneDasmDotByteScreenText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmDotByteScreenText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDotByteScreenText.setEditable(false);
        jTextPaneDasmDotByteScreenText.setContentType("text/html"); // NOI18N
        jTextPaneDasmDotByteScreenText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> .byte</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmDotByteScreenText.setViewportView(jTextPaneDasmDotByteScreenText);

        buttonGroupDasmScreenText.add(jRadioButtonDasmByteScreenText);
        jRadioButtonDasmByteScreenText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmByteScreenTextItemStateChanged(evt);
            }
        });

        jScrollPaneDasmByteScreenText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmByteScreenText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmByteScreenText.setEditable(false);
        jTextPaneDasmByteScreenText.setContentType("text/html"); // NOI18N
        jTextPaneDasmByteScreenText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>byte</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmByteScreenText.setViewportView(jTextPaneDasmByteScreenText);

        buttonGroupDasmScreenText.add(jRadioButtonDasmDcScreentText);
        jRadioButtonDasmDcScreentText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDcScreentTextItemStateChanged(evt);
            }
        });

        jScrollPaneDasmDcZeroScreenText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmDcZeroScreenText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDcZeroScreenText.setEditable(false);
        jTextPaneDasmDcZeroScreenText.setContentType("text/html"); // NOI18N
        jTextPaneDasmDcZeroScreenText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>dc</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmDcZeroScreenText.setViewportView(jTextPaneDasmDcZeroScreenText);

        buttonGroupDasmScreenText.add(jRadioButtonDasmDcDotBScreenText);
        jRadioButtonDasmDcDotBScreenText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDcDotBScreenTextItemStateChanged(evt);
            }
        });

        jScrollPaneDasmDcDotBScreenText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmDcDotBScreenText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDcDotBScreenText.setEditable(false);
        jTextPaneDasmDcDotBScreenText.setContentType("text/html"); // NOI18N
        jTextPaneDasmDcDotBScreenText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>dc.b</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmDcDotBScreenText.setViewportView(jTextPaneDasmDcDotBScreenText);

        jLabelDasmPetasciiTextDeclaration.setText("Text to petascii code:");

        buttonGroupDasmPetsciiText.add(jRadioButtonDasmDotBytePetasciiText);
        jRadioButtonDasmDotBytePetasciiText.setSelected(true);
        jRadioButtonDasmDotBytePetasciiText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDotBytePetasciiTextItemStateChanged(evt);
            }
        });

        jScrollPaneDasmDotBytePetasciiText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmDotBytePetasciiText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDotBytePetasciiText.setEditable(false);
        jTextPaneDasmDotBytePetasciiText.setContentType("text/html"); // NOI18N
        jTextPaneDasmDotBytePetasciiText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> .byte</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmDotBytePetasciiText.setViewportView(jTextPaneDasmDotBytePetasciiText);

        buttonGroupDasmPetsciiText.add(jRadioButtonDasmBytePetasciiText);
        jRadioButtonDasmBytePetasciiText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmBytePetasciiTextItemStateChanged(evt);
            }
        });

        jScrollPaneDasmBytePetAsciiText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmBytePetAsciiText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmBytePetasciiText.setEditable(false);
        jTextPaneDasmBytePetasciiText.setContentType("text/html"); // NOI18N
        jTextPaneDasmBytePetasciiText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>byte</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmBytePetAsciiText.setViewportView(jTextPaneDasmBytePetasciiText);

        buttonGroupDasmPetsciiText.add(jRadioButtonDasmDcPetasciiText);
        jRadioButtonDasmDcPetasciiText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDcPetasciiTextItemStateChanged(evt);
            }
        });

        jScrollPaneDasmDcZeroPetasciiText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmDcZeroPetasciiText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDcZeroPetasciText.setEditable(false);
        jTextPaneDasmDcZeroPetasciText.setContentType("text/html"); // NOI18N
        jTextPaneDasmDcZeroPetasciText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>dc</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmDcZeroPetasciiText.setViewportView(jTextPaneDasmDcZeroPetasciText);

        buttonGroupDasmPetsciiText.add(jRadioButtonDasmDcDotBPetasciiText);
        jRadioButtonDasmDcDotBPetasciiText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonDasmDcDotBPetasciiTextItemStateChanged(evt);
            }
        });

        jScrollPaneDasmDcDotBPetasciiText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneDasmDcDotBPetasciiText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneDasmDcDotBPetasciText.setEditable(false);
        jTextPaneDasmDcDotBPetasciText.setContentType("text/html"); // NOI18N
        jTextPaneDasmDcDotBPetasciText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>dc.b</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneDasmDcDotBPetasciiText.setViewportView(jTextPaneDasmDcDotBPetasciText);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabelDasmOriginDeclaration, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelDasmCommentDeclaration, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelDasmBlockCommentDeclaration, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabelDasmWordSwappedDeclaration, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelDasmStackWordDeclaration, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelDasmMonoSpriteDeclaration, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelDasmMultiSpriteDeclaration, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelDasmTextDeclaration, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelDasmNumTextDeclaration, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelDasmZeroTextDeclaration, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelDasmHighTextDeclaration, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                                    .addComponent(jLabelDasmShiftTextDeclaration, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                                    .addComponent(jLabelDasmScreenTextDeclaration, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                                    .addComponent(jLabelDasmTribyteDeclaration, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelDasmLongDeclaration, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelDasmAddressDeclaration, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelDasmPetasciiTextDeclaration, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(jLabelDasmWordDeclaration, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabelDasmByteDeclaration, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabelDasmLabelDeclaration, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabelDasmStarting, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButtonDasmProcStarting)
                            .addComponent(jRadioButtonDasmDotOrigin)
                            .addComponent(jRadioButtonDasmSemicolonComment)
                            .addComponent(jRadioButtonDasmSemicolonBlockComment)
                            .addComponent(jRadioButtonDasmLabelName)
                            .addComponent(jRadioButtonDasmDotByte)
                            .addComponent(jRadioButtonDasmDotWord)
                            .addComponent(jRadioButtonDasmDcDotSWordSwapped)
                            .addComponent(jRadioButtonDasmMacroTribyte)
                            .addComponent(jRadioButtonDasmDotLong)
                            .addComponent(jRadioButtonDasmDotWordAddress)
                            .addComponent(jRadioButtonDasmMacroStackWord)
                            .addComponent(jRadioButtonDasmByteHexMonoSprite)
                            .addComponent(jRadioButtonDasmByteHexMultiSprite)
                            .addComponent(jRadioButtonDasmDotByteText)
                            .addComponent(jRadioButtonDasmDotByteNumText)
                            .addComponent(jRadioButtonDasmDotByteZeroText)
                            .addComponent(jRadioButtonDasmDotByteHighText)
                            .addComponent(jRadioButtonDasmDotByteShiftText)
                            .addComponent(jRadioButtonDasmDotByteScreenText)
                            .addComponent(jRadioButtonDasmDotBytePetasciiText))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPaneDasmLabelName15)
                            .addComponent(jScrollPaneDasmLabelName8)
                            .addComponent(jScrollPaneDasmLabelName1)
                            .addComponent(jScrollPaneDasmLabelName3)
                            .addComponent(jScrollPaneDasmLabelName)
                            .addComponent(jScrollPaneDasmDotByte)
                            .addComponent(jScrollPaneDasmDotWord)
                            .addComponent(jScrollPaneDasmDcDotSWordSwapped)
                            .addComponent(jScrollPaneDasmMacroTribyte, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                            .addComponent(jScrollPaneDasmDotWordAddress)
                            .addComponent(jScrollPaneDasmMacroStackWord)
                            .addComponent(jScrollPaneDasmByteHexMonoSprite)
                            .addComponent(jScrollPaneDasmByteHexMultiSprite)
                            .addComponent(jScrollPaneDasmDotByteText)
                            .addComponent(jScrollPaneDasmDotByteNumText)
                            .addComponent(jScrollPaneDasmDotByteZeroText)
                            .addComponent(jScrollPaneDasmDotByteHighText)
                            .addComponent(jScrollPaneDasmDotByteShiftText)
                            .addComponent(jScrollPaneDasmDotByteScreenText)
                            .addComponent(jScrollPaneDasmDotBytePetasciiText)
                            .addComponent(jScrollPaneDasmDotLong))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButtonDasmOrigin)
                            .addComponent(jRadioButtonDasmCstyleComment)
                            .addComponent(jRadioButtonDasmCstyleBlockComment)
                            .addComponent(jRadioButtonDasmLabelNameColon)
                            .addComponent(jRadioButtonDasmByte)
                            .addComponent(jRadioButtonDasmWord)
                            .addComponent(jRadioButtonDasmLong)
                            .addComponent(jRadioButtonDasmWordAddress)
                            .addComponent(jRadioButtonDasmByteBinMonoSprite)
                            .addComponent(jRadioButtonDasmByteBinMultiSprite)
                            .addComponent(jRadioButtonDasmByteText)
                            .addComponent(jRadioButtonDasmByteNumText)
                            .addComponent(jRadioButtonDasmByteZeroText)
                            .addComponent(jRadioButtonDasmByteHighText)
                            .addComponent(jRadioButtonDasmByteShiftText)
                            .addComponent(jRadioButtonDasmByteScreenText)
                            .addComponent(jRadioButtonDasmBytePetasciiText))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPaneDasmByteNumText, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPaneDasmByteZeroText, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jScrollPaneDasmByteBinMonoSprite, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPaneDasmByteBinMultiSprite, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPaneDasmByteText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPaneDasmCstyleComment)
                                .addComponent(jScrollPaneDasmLabelName4)
                                .addComponent(jScrollPaneDasmLabelNameColon)
                                .addComponent(jScrollPaneDasmByte)
                                .addComponent(jScrollPaneDasmWord)
                                .addComponent(jScrollPaneDasmWordAddress)
                                .addComponent(jScrollPaneDasmLong)
                                .addComponent(jScrollPaneDasmLabelName9, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPaneDasmByteHighText, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPaneDasmByteShiftText, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPaneDasmByteScreenText, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPaneDasmBytePetAsciiText, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButtonDasmIfBlockComment)
                            .addComponent(jRadioButtonDasmDcByte)
                            .addComponent(jRadioButtonDasmDcWWord)
                            .addComponent(jRadioButtonDasmDcLLong)
                            .addComponent(jRadioButtonDasmDcWWordAddress)
                            .addComponent(jRadioButtonDasmMacroHexMonoSprite)
                            .addComponent(jRadioButtonDasmMacroHexMultiSprite)
                            .addComponent(jRadioButtonDasmDcText)
                            .addComponent(jRadioButtonDasmDcNumText)
                            .addComponent(jRadioButtonDasmDcZeroText)
                            .addComponent(jRadioButtonDasmDcHighText)
                            .addComponent(jRadioButtonDasmDcShiftText)
                            .addComponent(jRadioButtonDasmDcScreentText)
                            .addComponent(jRadioButtonDasmDcPetasciiText))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPaneDasmLabelName5)
                            .addComponent(jScrollPaneDasmDcWWord)
                            .addComponent(jScrollPaneDasmDcLLong, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                            .addComponent(jScrollPaneDasmDcWWordAddress)
                            .addComponent(jScrollPaneDasmMacroHexMonoSprite)
                            .addComponent(jScrollPaneDasmMacroHexMultiSprite)
                            .addComponent(jScrollPaneDasmMacroHexMonoSprite1)
                            .addComponent(jScrollPaneDasmDcNumText)
                            .addComponent(jScrollPaneDasmDcZeroText)
                            .addComponent(jScrollPaneDasmDcZeroHighText)
                            .addComponent(jScrollPaneDasmDcZeroShiftText)
                            .addComponent(jScrollPaneDasmDcZeroScreenText)
                            .addComponent(jScrollPaneDasmDcZeroPetasciiText)
                            .addComponent(jScrollPaneDasmDcByte))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButtonDasmDcBByte)
                            .addComponent(jRadioButtonDasmMacroBinMonoSprite)
                            .addComponent(jRadioButtonDasmMacroBinMultiSprite)
                            .addComponent(jRadioButtonDasmDcDotBText)
                            .addComponent(jRadioButtonDasmDcDotBNumText)
                            .addComponent(jRadioButtonDasmDcDotBZeroText)
                            .addComponent(jRadioButtonDasmDcDotBHighText)
                            .addComponent(jRadioButtonDasmDcDotBShiftText)
                            .addComponent(jRadioButtonDasmDcDotBScreenText)
                            .addComponent(jRadioButtonDasmDcDotBPetasciiText))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPaneDasmDcDotBText)
                            .addComponent(jScrollPaneDasmDcDotBNumText)
                            .addComponent(jScrollPaneDasmDcDotBZeroText)
                            .addComponent(jScrollPaneDasmDcDotBHighText)
                            .addComponent(jScrollPaneDasmDcDotBShiftText)
                            .addComponent(jScrollPaneDasmDcDotBScreenText)
                            .addComponent(jScrollPaneDasmDcDotBPetasciiText)
                            .addComponent(jScrollPaneDasmMacroBinMonoSprite)
                            .addComponent(jScrollPaneDasmDCBByte)
                            .addComponent(jScrollPaneDasmMacroBinMultiSprite, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBoxDasmF3Comp, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBoxDasmF3Comp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelDasmStarting)
                    .addComponent(jRadioButtonDasmProcStarting)
                    .addComponent(jScrollPaneDasmLabelName15, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelDasmOriginDeclaration)
                    .addComponent(jRadioButtonDasmDotOrigin)
                    .addComponent(jScrollPaneDasmLabelName8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmOrigin)
                    .addComponent(jScrollPaneDasmLabelName9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelDasmCommentDeclaration)
                    .addComponent(jRadioButtonDasmSemicolonComment)
                    .addComponent(jScrollPaneDasmLabelName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmCstyleComment)
                    .addComponent(jScrollPaneDasmCstyleComment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelDasmBlockCommentDeclaration)
                    .addComponent(jRadioButtonDasmSemicolonBlockComment)
                    .addComponent(jScrollPaneDasmLabelName3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmCstyleBlockComment)
                    .addComponent(jScrollPaneDasmLabelName4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmIfBlockComment)
                    .addComponent(jScrollPaneDasmLabelName5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelDasmLabelDeclaration)
                    .addComponent(jRadioButtonDasmLabelName)
                    .addComponent(jScrollPaneDasmLabelName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmLabelNameColon)
                    .addComponent(jScrollPaneDasmLabelNameColon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelDasmByteDeclaration)
                    .addComponent(jRadioButtonDasmDotByte)
                    .addComponent(jScrollPaneDasmDotByte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmByte)
                    .addComponent(jScrollPaneDasmByte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmDcByte)
                    .addComponent(jScrollPaneDasmDcByte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmDcBByte)
                    .addComponent(jScrollPaneDasmDCBByte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelDasmWordDeclaration)
                    .addComponent(jRadioButtonDasmDotWord)
                    .addComponent(jScrollPaneDasmDotWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmWord)
                    .addComponent(jScrollPaneDasmWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPaneDasmDcWWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmDcWWord))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelDasmWordSwappedDeclaration)
                    .addComponent(jRadioButtonDasmDcDotSWordSwapped)
                    .addComponent(jScrollPaneDasmDcDotSWordSwapped, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelDasmTribyteDeclaration)
                    .addComponent(jRadioButtonDasmMacroTribyte)
                    .addComponent(jScrollPaneDasmMacroTribyte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelDasmLongDeclaration)
                    .addComponent(jRadioButtonDasmDotLong)
                    .addComponent(jScrollPaneDasmDotLong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmLong)
                    .addComponent(jScrollPaneDasmLong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmDcLLong)
                    .addComponent(jScrollPaneDasmDcLLong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelDasmAddressDeclaration)
                    .addComponent(jRadioButtonDasmDotWordAddress)
                    .addComponent(jScrollPaneDasmDotWordAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmWordAddress)
                    .addComponent(jScrollPaneDasmWordAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmDcWWordAddress)
                    .addComponent(jScrollPaneDasmDcWWordAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelDasmStackWordDeclaration)
                    .addComponent(jRadioButtonDasmMacroStackWord)
                    .addComponent(jScrollPaneDasmMacroStackWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelDasmMonoSpriteDeclaration)
                    .addComponent(jRadioButtonDasmByteHexMonoSprite)
                    .addComponent(jScrollPaneDasmByteHexMonoSprite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmByteBinMonoSprite)
                    .addComponent(jScrollPaneDasmByteBinMonoSprite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmMacroHexMonoSprite)
                    .addComponent(jScrollPaneDasmMacroHexMonoSprite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmMacroBinMonoSprite)
                    .addComponent(jScrollPaneDasmMacroBinMonoSprite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelDasmMultiSpriteDeclaration)
                    .addComponent(jRadioButtonDasmByteHexMultiSprite)
                    .addComponent(jScrollPaneDasmByteHexMultiSprite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmByteBinMultiSprite)
                    .addComponent(jScrollPaneDasmByteBinMultiSprite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmMacroHexMultiSprite)
                    .addComponent(jScrollPaneDasmMacroHexMultiSprite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmMacroBinMultiSprite)
                    .addComponent(jScrollPaneDasmMacroBinMultiSprite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelDasmTextDeclaration)
                    .addComponent(jRadioButtonDasmDotByteText)
                    .addComponent(jScrollPaneDasmDotByteText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmByteText)
                    .addComponent(jScrollPaneDasmByteText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmDcText)
                    .addComponent(jScrollPaneDasmMacroHexMonoSprite1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmDcDotBText)
                    .addComponent(jScrollPaneDasmDcDotBText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelDasmNumTextDeclaration)
                    .addComponent(jRadioButtonDasmDotByteNumText)
                    .addComponent(jScrollPaneDasmDotByteNumText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmByteNumText)
                    .addComponent(jScrollPaneDasmByteNumText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmDcNumText)
                    .addComponent(jScrollPaneDasmDcNumText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmDcDotBNumText)
                    .addComponent(jScrollPaneDasmDcDotBNumText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelDasmZeroTextDeclaration)
                    .addComponent(jRadioButtonDasmDotByteZeroText)
                    .addComponent(jScrollPaneDasmDotByteZeroText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmByteZeroText)
                    .addComponent(jScrollPaneDasmByteZeroText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmDcZeroText)
                    .addComponent(jScrollPaneDasmDcZeroText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmDcDotBZeroText)
                    .addComponent(jScrollPaneDasmDcDotBZeroText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelDasmHighTextDeclaration)
                    .addComponent(jRadioButtonDasmDotByteHighText)
                    .addComponent(jScrollPaneDasmDotByteHighText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmByteHighText)
                    .addComponent(jScrollPaneDasmByteHighText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmDcHighText)
                    .addComponent(jScrollPaneDasmDcZeroHighText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmDcDotBHighText)
                    .addComponent(jScrollPaneDasmDcDotBHighText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelDasmShiftTextDeclaration)
                    .addComponent(jRadioButtonDasmDotByteShiftText)
                    .addComponent(jScrollPaneDasmDotByteShiftText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmByteShiftText)
                    .addComponent(jScrollPaneDasmByteShiftText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmDcShiftText)
                    .addComponent(jScrollPaneDasmDcZeroShiftText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmDcDotBShiftText)
                    .addComponent(jScrollPaneDasmDcDotBShiftText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelDasmScreenTextDeclaration)
                    .addComponent(jRadioButtonDasmDotByteScreenText)
                    .addComponent(jScrollPaneDasmDotByteScreenText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmByteScreenText)
                    .addComponent(jScrollPaneDasmByteScreenText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmDcScreentText)
                    .addComponent(jScrollPaneDasmDcZeroScreenText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmDcDotBScreenText)
                    .addComponent(jScrollPaneDasmDcDotBScreenText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelDasmPetasciiTextDeclaration)
                    .addComponent(jRadioButtonDasmDotBytePetasciiText)
                    .addComponent(jScrollPaneDasmDotBytePetasciiText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmBytePetasciiText)
                    .addComponent(jScrollPaneDasmBytePetAsciiText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmDcPetasciiText)
                    .addComponent(jScrollPaneDasmDcZeroPetasciiText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonDasmDcDotBPetasciiText)
                    .addComponent(jScrollPaneDasmDcDotBPetasciiText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxDasmF3CompActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxDasmF3CompActionPerformed
        option.dasmF3Comp=jCheckBoxDasmF3Comp.isSelected();
    }//GEN-LAST:event_jCheckBoxDasmF3CompActionPerformed

    private void jRadioButtonDasmDotByteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDotByteItemStateChanged
        option.dasmByte=Assembler.Byte.DOT_BYTE;
    }//GEN-LAST:event_jRadioButtonDasmDotByteItemStateChanged

    private void jRadioButtonDasmByteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmByteItemStateChanged
        option.dasmByte=Assembler.Byte.BYTE;
    }//GEN-LAST:event_jRadioButtonDasmByteItemStateChanged

    private void jRadioButtonDasmDcByteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDcByteItemStateChanged
        option.dasmByte=Assembler.Byte.DC_BYTE;
    }//GEN-LAST:event_jRadioButtonDasmDcByteItemStateChanged

    private void jRadioButtonDasmLabelNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmLabelNameItemStateChanged
        option.dasmLabel=Assembler.Label.NAME;
    }//GEN-LAST:event_jRadioButtonDasmLabelNameItemStateChanged

    private void jRadioButtonDasmLabelNameColonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmLabelNameColonItemStateChanged
        option.dasmLabel=Assembler.Label.NAME_COLON;
    }//GEN-LAST:event_jRadioButtonDasmLabelNameColonItemStateChanged

    private void jRadioButtonDasmDcBByteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDcBByteItemStateChanged
        option.dasmByte=Assembler.Byte.DC_B_BYTE;
    }//GEN-LAST:event_jRadioButtonDasmDcBByteItemStateChanged

    private void jRadioButtonDasmDotWordItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDotWordItemStateChanged
        option.dasmWord=Assembler.Word.DOT_WORD;
    }//GEN-LAST:event_jRadioButtonDasmDotWordItemStateChanged

    private void jRadioButtonDasmWordItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmWordItemStateChanged
        option.dasmWord=Assembler.Word.WORD;
    }//GEN-LAST:event_jRadioButtonDasmWordItemStateChanged

    private void jRadioButtonDasmDcWWordItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDcWWordItemStateChanged
        option.dasmWord=Assembler.Word.DC_W_WORD;
    }//GEN-LAST:event_jRadioButtonDasmDcWWordItemStateChanged

    private void jRadioButtonDasmCstyleCommentItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmCstyleCommentItemStateChanged
        option.dasmComment=Assembler.Comment.CSTYLE;
    }//GEN-LAST:event_jRadioButtonDasmCstyleCommentItemStateChanged

    private void jRadioButtonDasmSemicolonCommentItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmSemicolonCommentItemStateChanged
        option.dasmComment=Assembler.Comment.SEMICOLON;
    }//GEN-LAST:event_jRadioButtonDasmSemicolonCommentItemStateChanged

    private void jRadioButtonDasmSemicolonBlockCommentItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmSemicolonBlockCommentItemStateChanged
        option.dasmBlockComment=Assembler.BlockComment.SEMICOLON;
    }//GEN-LAST:event_jRadioButtonDasmSemicolonBlockCommentItemStateChanged

    private void jRadioButtonDasmCstyleBlockCommentItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmCstyleBlockCommentItemStateChanged
        option.dasmBlockComment=Assembler.BlockComment.CSTYLE;
    }//GEN-LAST:event_jRadioButtonDasmCstyleBlockCommentItemStateChanged

    private void jRadioButtonDasmIfBlockCommentItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmIfBlockCommentItemStateChanged
        option.dasmBlockComment=Assembler.BlockComment.IF;
    }//GEN-LAST:event_jRadioButtonDasmIfBlockCommentItemStateChanged

    private void jRadioButtonDasmDotOriginItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDotOriginItemStateChanged
        option.dasmOrigin=Assembler.Origin.DOT_ORG;
    }//GEN-LAST:event_jRadioButtonDasmDotOriginItemStateChanged

    private void jRadioButtonDasmOriginItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmOriginItemStateChanged
        option.dasmOrigin=Assembler.Origin.ORG;
    }//GEN-LAST:event_jRadioButtonDasmOriginItemStateChanged

    private void jRadioButtonDasmProcStartingItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmProcStartingItemStateChanged
        option.dasmStarting=Assembler.Starting.PROC;
    }//GEN-LAST:event_jRadioButtonDasmProcStartingItemStateChanged

    private void jRadioButtonDasmByteHexMonoSpriteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmByteHexMonoSpriteItemStateChanged
        option.dasmMonoSprite=Assembler.MonoSprite.BYTE_HEX;
    }//GEN-LAST:event_jRadioButtonDasmByteHexMonoSpriteItemStateChanged

    private void jRadioButtonDasmByteBinMonoSpriteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmByteBinMonoSpriteItemStateChanged
        option.dasmMonoSprite=Assembler.MonoSprite.BYTE_BIN;
    }//GEN-LAST:event_jRadioButtonDasmByteBinMonoSpriteItemStateChanged

    private void jRadioButtonDasmMacroHexMonoSpriteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmMacroHexMonoSpriteItemStateChanged
        option.dasmMonoSprite=Assembler.MonoSprite.MACRO_HEX;
    }//GEN-LAST:event_jRadioButtonDasmMacroHexMonoSpriteItemStateChanged

    private void jRadioButtonDasmMacroBinMonoSpriteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmMacroBinMonoSpriteItemStateChanged
        option.dasmMonoSprite=Assembler.MonoSprite.MACRO_BIN;
    }//GEN-LAST:event_jRadioButtonDasmMacroBinMonoSpriteItemStateChanged

    private void jRadioButtonDasmByteHexMultiSpriteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmByteHexMultiSpriteItemStateChanged
        option.dasmMultiSprite=Assembler.MultiSprite.BYTE_HEX;
    }//GEN-LAST:event_jRadioButtonDasmByteHexMultiSpriteItemStateChanged

    private void jRadioButtonDasmByteBinMultiSpriteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmByteBinMultiSpriteItemStateChanged
        option.dasmMultiSprite=Assembler.MultiSprite.BYTE_BIN;
    }//GEN-LAST:event_jRadioButtonDasmByteBinMultiSpriteItemStateChanged

    private void jRadioButtonDasmMacroHexMultiSpriteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmMacroHexMultiSpriteItemStateChanged
        option.dasmMultiSprite=Assembler.MultiSprite.MACRO_HEX;
    }//GEN-LAST:event_jRadioButtonDasmMacroHexMultiSpriteItemStateChanged

    private void jRadioButtonDasmMacroBinMultiSpriteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmMacroBinMultiSpriteItemStateChanged
        option.dasmMultiSprite=Assembler.MultiSprite.MACRO_BIN;
    }//GEN-LAST:event_jRadioButtonDasmMacroBinMultiSpriteItemStateChanged

    private void jRadioButtonDasmMacroTribyteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmMacroTribyteItemStateChanged
        option.dasmTribyte=Assembler.Tribyte.MACRO_TRIBYTE;
    }//GEN-LAST:event_jRadioButtonDasmMacroTribyteItemStateChanged

    private void jRadioButtonDasmDotLongItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDotLongItemStateChanged
        option.dasmLong=Assembler.Long.DOT_LONG;
    }//GEN-LAST:event_jRadioButtonDasmDotLongItemStateChanged

    private void jRadioButtonDasmLongItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmLongItemStateChanged
        option.dasmLong=Assembler.Long.LONG;
    }//GEN-LAST:event_jRadioButtonDasmLongItemStateChanged

    private void jRadioButtonDasmDcLLongItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDcLLongItemStateChanged
        option.dasmLong=Assembler.Long.DOT_DC_L_LONG;
    }//GEN-LAST:event_jRadioButtonDasmDcLLongItemStateChanged

    private void jRadioButtonDasmDcDotSWordSwappedItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDcDotSWordSwappedItemStateChanged
        option.dasmWordSwapped=Assembler.WordSwapped.DC_DOT_S_WORD_SWAPPED;
    }//GEN-LAST:event_jRadioButtonDasmDcDotSWordSwappedItemStateChanged

    private void jRadioButtonDasmDotByteTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDotByteTextItemStateChanged
        option.dasmText=Assembler.Text.DOT_BYTE_TEXT;
    }//GEN-LAST:event_jRadioButtonDasmDotByteTextItemStateChanged

    private void jRadioButtonDasmByteTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmByteTextItemStateChanged
        option.dasmText=Assembler.Text.BYTE_TEXT;
    }//GEN-LAST:event_jRadioButtonDasmByteTextItemStateChanged

    private void jRadioButtonDasmDcTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDcTextItemStateChanged
        option.dasmText=Assembler.Text.DC_BYTE_TEXT;
    }//GEN-LAST:event_jRadioButtonDasmDcTextItemStateChanged

    private void jRadioButtonDasmDcDotBTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDcDotBTextItemStateChanged
        option.dasmText=Assembler.Text.DC_B_BYTE_TEXT;
    }//GEN-LAST:event_jRadioButtonDasmDcDotBTextItemStateChanged

    private void jRadioButtonDasmDotByteNumTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDotByteNumTextItemStateChanged
        option.dasmNumText=Assembler.NumText.DOT_BYTE_NUMTEXT;
    }//GEN-LAST:event_jRadioButtonDasmDotByteNumTextItemStateChanged

    private void jRadioButtonDasmByteNumTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmByteNumTextItemStateChanged
        option.dasmNumText=Assembler.NumText.BYTE_NUMTEXT;
    }//GEN-LAST:event_jRadioButtonDasmByteNumTextItemStateChanged

    private void jRadioButtonDasmDcNumTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDcNumTextItemStateChanged
        option.dasmNumText=Assembler.NumText.DC_NUMTEXT;
    }//GEN-LAST:event_jRadioButtonDasmDcNumTextItemStateChanged

    private void jRadioButtonDasmDcDotBNumTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDcDotBNumTextItemStateChanged
        option.dasmNumText=Assembler.NumText.DC_DOT_B_NUMTEXT;
    }//GEN-LAST:event_jRadioButtonDasmDcDotBNumTextItemStateChanged

    private void jRadioButtonDasmDotByteZeroTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDotByteZeroTextItemStateChanged
        option.dasmZeroText=Assembler.ZeroText.DOT_BYTE_ZEROTEXT;
    }//GEN-LAST:event_jRadioButtonDasmDotByteZeroTextItemStateChanged

    private void jRadioButtonDasmByteZeroTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmByteZeroTextItemStateChanged
        option.dasmZeroText=Assembler.ZeroText.BYTE_ZEROTEXT;
    }//GEN-LAST:event_jRadioButtonDasmByteZeroTextItemStateChanged

    private void jRadioButtonDasmDcZeroTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDcZeroTextItemStateChanged
        option.dasmZeroText=Assembler.ZeroText.DC_BYTE_ZEROTEXT;
    }//GEN-LAST:event_jRadioButtonDasmDcZeroTextItemStateChanged

    private void jRadioButtonDasmDcDotBZeroTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDcDotBZeroTextItemStateChanged
        option.dasmZeroText=Assembler.ZeroText.DC_B_BYTE_ZEROTEXT;
    }//GEN-LAST:event_jRadioButtonDasmDcDotBZeroTextItemStateChanged

    private void jRadioButtonDasmDotWordAddressItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDotWordAddressItemStateChanged
        option.dasmAddress=Assembler.Address.DOT_WORD_ADDR;
    }//GEN-LAST:event_jRadioButtonDasmDotWordAddressItemStateChanged

    private void jRadioButtonDasmWordAddressItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmWordAddressItemStateChanged
        option.dasmAddress=Assembler.Address.WORD_ADDR;
    }//GEN-LAST:event_jRadioButtonDasmWordAddressItemStateChanged

    private void jRadioButtonDasmDcWWordAddressItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDcWWordAddressItemStateChanged
        option.dasmAddress=Assembler.Address.DC_W_ADDR;
    }//GEN-LAST:event_jRadioButtonDasmDcWWordAddressItemStateChanged

    private void jRadioButtonDasmMacroStackWordItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmMacroStackWordItemStateChanged
        option.dasmStackWord=Assembler.StackWord.MACRO_STACKWORD;
    }//GEN-LAST:event_jRadioButtonDasmMacroStackWordItemStateChanged

    private void jRadioButtonDasmDotByteHighTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDotByteHighTextItemStateChanged
        option.dasmHighText=Assembler.HighText.DC_BYTE_HIGHTEXT;
    }//GEN-LAST:event_jRadioButtonDasmDotByteHighTextItemStateChanged

    private void jRadioButtonDasmByteHighTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmByteHighTextItemStateChanged
        option.dasmHighText=Assembler.HighText.BYTE_HIGHTEXT;
    }//GEN-LAST:event_jRadioButtonDasmByteHighTextItemStateChanged

    private void jRadioButtonDasmDcHighTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDcHighTextItemStateChanged
        option.dasmHighText=Assembler.HighText.DC_BYTE_HIGHTEXT;
    }//GEN-LAST:event_jRadioButtonDasmDcHighTextItemStateChanged

    private void jRadioButtonDasmDcDotBHighTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDcDotBHighTextItemStateChanged
        option.dasmHighText=Assembler.HighText.DC_B_BYTE_HIGHTEXT;
    }//GEN-LAST:event_jRadioButtonDasmDcDotBHighTextItemStateChanged

    private void jRadioButtonDasmDotByteShiftTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDotByteShiftTextItemStateChanged
        option.dasmShiftText=Assembler.ShiftText.DOT_BYTE_SHIFTTEXT;
    }//GEN-LAST:event_jRadioButtonDasmDotByteShiftTextItemStateChanged

    private void jRadioButtonDasmByteShiftTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmByteShiftTextItemStateChanged
        option.dasmShiftText=Assembler.ShiftText.BYTE_SHIFTTEXT;
    }//GEN-LAST:event_jRadioButtonDasmByteShiftTextItemStateChanged

    private void jRadioButtonDasmDcShiftTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDcShiftTextItemStateChanged
        option.dasmShiftText=Assembler.ShiftText.DC_BYTE_SHIFTTEXT;
    }//GEN-LAST:event_jRadioButtonDasmDcShiftTextItemStateChanged

    private void jRadioButtonDasmDcDotBShiftTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDcDotBShiftTextItemStateChanged
        option.dasmShiftText=Assembler.ShiftText.DC_B_BYTE_SHIFTTEXT;
    }//GEN-LAST:event_jRadioButtonDasmDcDotBShiftTextItemStateChanged

    private void jRadioButtonDasmDotByteScreenTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDotByteScreenTextItemStateChanged
        option.dasmScreenText=Assembler.ScreenText.DOT_BYTE_SCREENTEXT;
    }//GEN-LAST:event_jRadioButtonDasmDotByteScreenTextItemStateChanged

    private void jRadioButtonDasmByteScreenTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmByteScreenTextItemStateChanged
        option.dasmScreenText=Assembler.ScreenText.BYTE_SCREENTEXT;
    }//GEN-LAST:event_jRadioButtonDasmByteScreenTextItemStateChanged

    private void jRadioButtonDasmDcScreentTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDcScreentTextItemStateChanged
        option.dasmScreenText=Assembler.ScreenText.DC_BYTE_SCREENTEXT;
    }//GEN-LAST:event_jRadioButtonDasmDcScreentTextItemStateChanged

    private void jRadioButtonDasmDcDotBScreenTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDcDotBScreenTextItemStateChanged
        option.dasmScreenText=Assembler.ScreenText.DC_B_BYTE_SCREENTEXT;
    }//GEN-LAST:event_jRadioButtonDasmDcDotBScreenTextItemStateChanged

    private void jRadioButtonDasmDotBytePetasciiTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDotBytePetasciiTextItemStateChanged
        option.dasmPetasciiText=Assembler.PetasciiText.DOT_BYTE_PETASCIITEXT;
    }//GEN-LAST:event_jRadioButtonDasmDotBytePetasciiTextItemStateChanged

    private void jRadioButtonDasmBytePetasciiTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmBytePetasciiTextItemStateChanged
        option.dasmPetasciiText=Assembler.PetasciiText.BYTE_PETASCIITEXT;
    }//GEN-LAST:event_jRadioButtonDasmBytePetasciiTextItemStateChanged

    private void jRadioButtonDasmDcPetasciiTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDcPetasciiTextItemStateChanged
        option.dasmPetasciiText=Assembler.PetasciiText.DC_BYTE_PETASCIITEXT;
    }//GEN-LAST:event_jRadioButtonDasmDcPetasciiTextItemStateChanged

    private void jRadioButtonDasmDcDotBPetasciiTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonDasmDcDotBPetasciiTextItemStateChanged
        option.dasmPetasciiText=Assembler.PetasciiText.DC_B_BYTE_PETASCIITEXT;
    }//GEN-LAST:event_jRadioButtonDasmDcDotBPetasciiTextItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupDasmAddress;
    private javax.swing.ButtonGroup buttonGroupDasmBlockComment;
    private javax.swing.ButtonGroup buttonGroupDasmByte;
    private javax.swing.ButtonGroup buttonGroupDasmComment;
    private javax.swing.ButtonGroup buttonGroupDasmHighText;
    private javax.swing.ButtonGroup buttonGroupDasmLabel;
    private javax.swing.ButtonGroup buttonGroupDasmLong;
    private javax.swing.ButtonGroup buttonGroupDasmMonoSprite;
    private javax.swing.ButtonGroup buttonGroupDasmMultiSprite;
    private javax.swing.ButtonGroup buttonGroupDasmNumText;
    private javax.swing.ButtonGroup buttonGroupDasmOrigin;
    private javax.swing.ButtonGroup buttonGroupDasmPetsciiText;
    private javax.swing.ButtonGroup buttonGroupDasmScreenText;
    private javax.swing.ButtonGroup buttonGroupDasmShiftText;
    private javax.swing.ButtonGroup buttonGroupDasmStackWord;
    private javax.swing.ButtonGroup buttonGroupDasmStarting;
    private javax.swing.ButtonGroup buttonGroupDasmText;
    private javax.swing.ButtonGroup buttonGroupDasmTribyte;
    private javax.swing.ButtonGroup buttonGroupDasmWord;
    private javax.swing.ButtonGroup buttonGroupDasmWordSwapped;
    private javax.swing.ButtonGroup buttonGroupDasmZeroText;
    private javax.swing.JCheckBox jCheckBoxDasmF3Comp;
    private javax.swing.JLabel jLabelDasmAddressDeclaration;
    private javax.swing.JLabel jLabelDasmBlockCommentDeclaration;
    private javax.swing.JLabel jLabelDasmByteDeclaration;
    private javax.swing.JLabel jLabelDasmCommentDeclaration;
    private javax.swing.JLabel jLabelDasmHighTextDeclaration;
    private javax.swing.JLabel jLabelDasmLabelDeclaration;
    private javax.swing.JLabel jLabelDasmLongDeclaration;
    private javax.swing.JLabel jLabelDasmMonoSpriteDeclaration;
    private javax.swing.JLabel jLabelDasmMultiSpriteDeclaration;
    private javax.swing.JLabel jLabelDasmNumTextDeclaration;
    private javax.swing.JLabel jLabelDasmOriginDeclaration;
    private javax.swing.JLabel jLabelDasmPetasciiTextDeclaration;
    private javax.swing.JLabel jLabelDasmScreenTextDeclaration;
    private javax.swing.JLabel jLabelDasmShiftTextDeclaration;
    private javax.swing.JLabel jLabelDasmStackWordDeclaration;
    private javax.swing.JLabel jLabelDasmStarting;
    private javax.swing.JLabel jLabelDasmTextDeclaration;
    private javax.swing.JLabel jLabelDasmTribyteDeclaration;
    private javax.swing.JLabel jLabelDasmWordDeclaration;
    private javax.swing.JLabel jLabelDasmWordSwappedDeclaration;
    private javax.swing.JLabel jLabelDasmZeroTextDeclaration;
    private javax.swing.JRadioButton jRadioButtonDasmByte;
    private javax.swing.JRadioButton jRadioButtonDasmByteBinMonoSprite;
    private javax.swing.JRadioButton jRadioButtonDasmByteBinMultiSprite;
    private javax.swing.JRadioButton jRadioButtonDasmByteHexMonoSprite;
    private javax.swing.JRadioButton jRadioButtonDasmByteHexMultiSprite;
    private javax.swing.JRadioButton jRadioButtonDasmByteHighText;
    private javax.swing.JRadioButton jRadioButtonDasmByteNumText;
    private javax.swing.JRadioButton jRadioButtonDasmBytePetasciiText;
    private javax.swing.JRadioButton jRadioButtonDasmByteScreenText;
    private javax.swing.JRadioButton jRadioButtonDasmByteShiftText;
    private javax.swing.JRadioButton jRadioButtonDasmByteText;
    private javax.swing.JRadioButton jRadioButtonDasmByteZeroText;
    private javax.swing.JRadioButton jRadioButtonDasmCstyleBlockComment;
    private javax.swing.JRadioButton jRadioButtonDasmCstyleComment;
    private javax.swing.JRadioButton jRadioButtonDasmDcBByte;
    private javax.swing.JRadioButton jRadioButtonDasmDcByte;
    private javax.swing.JRadioButton jRadioButtonDasmDcDotBHighText;
    private javax.swing.JRadioButton jRadioButtonDasmDcDotBNumText;
    private javax.swing.JRadioButton jRadioButtonDasmDcDotBPetasciiText;
    private javax.swing.JRadioButton jRadioButtonDasmDcDotBScreenText;
    private javax.swing.JRadioButton jRadioButtonDasmDcDotBShiftText;
    private javax.swing.JRadioButton jRadioButtonDasmDcDotBText;
    private javax.swing.JRadioButton jRadioButtonDasmDcDotBZeroText;
    private javax.swing.JRadioButton jRadioButtonDasmDcDotSWordSwapped;
    private javax.swing.JRadioButton jRadioButtonDasmDcHighText;
    private javax.swing.JRadioButton jRadioButtonDasmDcLLong;
    private javax.swing.JRadioButton jRadioButtonDasmDcNumText;
    private javax.swing.JRadioButton jRadioButtonDasmDcPetasciiText;
    private javax.swing.JRadioButton jRadioButtonDasmDcScreentText;
    private javax.swing.JRadioButton jRadioButtonDasmDcShiftText;
    private javax.swing.JRadioButton jRadioButtonDasmDcText;
    private javax.swing.JRadioButton jRadioButtonDasmDcWWord;
    private javax.swing.JRadioButton jRadioButtonDasmDcWWordAddress;
    private javax.swing.JRadioButton jRadioButtonDasmDcZeroText;
    private javax.swing.JRadioButton jRadioButtonDasmDotByte;
    private javax.swing.JRadioButton jRadioButtonDasmDotByteHighText;
    private javax.swing.JRadioButton jRadioButtonDasmDotByteNumText;
    private javax.swing.JRadioButton jRadioButtonDasmDotBytePetasciiText;
    private javax.swing.JRadioButton jRadioButtonDasmDotByteScreenText;
    private javax.swing.JRadioButton jRadioButtonDasmDotByteShiftText;
    private javax.swing.JRadioButton jRadioButtonDasmDotByteText;
    private javax.swing.JRadioButton jRadioButtonDasmDotByteZeroText;
    private javax.swing.JRadioButton jRadioButtonDasmDotLong;
    private javax.swing.JRadioButton jRadioButtonDasmDotOrigin;
    private javax.swing.JRadioButton jRadioButtonDasmDotWord;
    private javax.swing.JRadioButton jRadioButtonDasmDotWordAddress;
    private javax.swing.JRadioButton jRadioButtonDasmIfBlockComment;
    private javax.swing.JRadioButton jRadioButtonDasmLabelName;
    private javax.swing.JRadioButton jRadioButtonDasmLabelNameColon;
    private javax.swing.JRadioButton jRadioButtonDasmLong;
    private javax.swing.JRadioButton jRadioButtonDasmMacroBinMonoSprite;
    private javax.swing.JRadioButton jRadioButtonDasmMacroBinMultiSprite;
    private javax.swing.JRadioButton jRadioButtonDasmMacroHexMonoSprite;
    private javax.swing.JRadioButton jRadioButtonDasmMacroHexMultiSprite;
    private javax.swing.JRadioButton jRadioButtonDasmMacroStackWord;
    private javax.swing.JRadioButton jRadioButtonDasmMacroTribyte;
    private javax.swing.JRadioButton jRadioButtonDasmOrigin;
    private javax.swing.JRadioButton jRadioButtonDasmProcStarting;
    private javax.swing.JRadioButton jRadioButtonDasmSemicolonBlockComment;
    private javax.swing.JRadioButton jRadioButtonDasmSemicolonComment;
    private javax.swing.JRadioButton jRadioButtonDasmWord;
    private javax.swing.JRadioButton jRadioButtonDasmWordAddress;
    private javax.swing.JScrollPane jScrollPaneDasmByte;
    private javax.swing.JScrollPane jScrollPaneDasmByteBinMonoSprite;
    private javax.swing.JScrollPane jScrollPaneDasmByteBinMultiSprite;
    private javax.swing.JScrollPane jScrollPaneDasmByteHexMonoSprite;
    private javax.swing.JScrollPane jScrollPaneDasmByteHexMultiSprite;
    private javax.swing.JScrollPane jScrollPaneDasmByteHighText;
    private javax.swing.JScrollPane jScrollPaneDasmByteNumText;
    private javax.swing.JScrollPane jScrollPaneDasmBytePetAsciiText;
    private javax.swing.JScrollPane jScrollPaneDasmByteScreenText;
    private javax.swing.JScrollPane jScrollPaneDasmByteShiftText;
    private javax.swing.JScrollPane jScrollPaneDasmByteText;
    private javax.swing.JScrollPane jScrollPaneDasmByteZeroText;
    private javax.swing.JScrollPane jScrollPaneDasmCstyleComment;
    private javax.swing.JScrollPane jScrollPaneDasmDCBByte;
    private javax.swing.JScrollPane jScrollPaneDasmDcByte;
    private javax.swing.JScrollPane jScrollPaneDasmDcDotBHighText;
    private javax.swing.JScrollPane jScrollPaneDasmDcDotBNumText;
    private javax.swing.JScrollPane jScrollPaneDasmDcDotBPetasciiText;
    private javax.swing.JScrollPane jScrollPaneDasmDcDotBScreenText;
    private javax.swing.JScrollPane jScrollPaneDasmDcDotBShiftText;
    private javax.swing.JScrollPane jScrollPaneDasmDcDotBText;
    private javax.swing.JScrollPane jScrollPaneDasmDcDotBZeroText;
    private javax.swing.JScrollPane jScrollPaneDasmDcDotSWordSwapped;
    private javax.swing.JScrollPane jScrollPaneDasmDcLLong;
    private javax.swing.JScrollPane jScrollPaneDasmDcNumText;
    private javax.swing.JScrollPane jScrollPaneDasmDcWWord;
    private javax.swing.JScrollPane jScrollPaneDasmDcWWordAddress;
    private javax.swing.JScrollPane jScrollPaneDasmDcZeroHighText;
    private javax.swing.JScrollPane jScrollPaneDasmDcZeroPetasciiText;
    private javax.swing.JScrollPane jScrollPaneDasmDcZeroScreenText;
    private javax.swing.JScrollPane jScrollPaneDasmDcZeroShiftText;
    private javax.swing.JScrollPane jScrollPaneDasmDcZeroText;
    private javax.swing.JScrollPane jScrollPaneDasmDotByte;
    private javax.swing.JScrollPane jScrollPaneDasmDotByteHighText;
    private javax.swing.JScrollPane jScrollPaneDasmDotByteNumText;
    private javax.swing.JScrollPane jScrollPaneDasmDotBytePetasciiText;
    private javax.swing.JScrollPane jScrollPaneDasmDotByteScreenText;
    private javax.swing.JScrollPane jScrollPaneDasmDotByteShiftText;
    private javax.swing.JScrollPane jScrollPaneDasmDotByteText;
    private javax.swing.JScrollPane jScrollPaneDasmDotByteZeroText;
    private javax.swing.JScrollPane jScrollPaneDasmDotLong;
    private javax.swing.JScrollPane jScrollPaneDasmDotWord;
    private javax.swing.JScrollPane jScrollPaneDasmDotWordAddress;
    private javax.swing.JScrollPane jScrollPaneDasmLabelName;
    private javax.swing.JScrollPane jScrollPaneDasmLabelName1;
    private javax.swing.JScrollPane jScrollPaneDasmLabelName15;
    private javax.swing.JScrollPane jScrollPaneDasmLabelName3;
    private javax.swing.JScrollPane jScrollPaneDasmLabelName4;
    private javax.swing.JScrollPane jScrollPaneDasmLabelName5;
    private javax.swing.JScrollPane jScrollPaneDasmLabelName8;
    private javax.swing.JScrollPane jScrollPaneDasmLabelName9;
    private javax.swing.JScrollPane jScrollPaneDasmLabelNameColon;
    private javax.swing.JScrollPane jScrollPaneDasmLong;
    private javax.swing.JScrollPane jScrollPaneDasmMacroBinMonoSprite;
    private javax.swing.JScrollPane jScrollPaneDasmMacroBinMultiSprite;
    private javax.swing.JScrollPane jScrollPaneDasmMacroHexMonoSprite;
    private javax.swing.JScrollPane jScrollPaneDasmMacroHexMonoSprite1;
    private javax.swing.JScrollPane jScrollPaneDasmMacroHexMultiSprite;
    private javax.swing.JScrollPane jScrollPaneDasmMacroStackWord;
    private javax.swing.JScrollPane jScrollPaneDasmMacroTribyte;
    private javax.swing.JScrollPane jScrollPaneDasmWord;
    private javax.swing.JScrollPane jScrollPaneDasmWordAddress;
    private javax.swing.JTextPane jTextPaneDasmByte;
    private javax.swing.JTextPane jTextPaneDasmByteBinMonoSprite;
    private javax.swing.JTextPane jTextPaneDasmByteBinMultiSprite;
    private javax.swing.JTextPane jTextPaneDasmByteHexMonoSprite;
    private javax.swing.JTextPane jTextPaneDasmByteHexMultiSprite;
    private javax.swing.JTextPane jTextPaneDasmByteHighText;
    private javax.swing.JTextPane jTextPaneDasmByteNumText;
    private javax.swing.JTextPane jTextPaneDasmBytePetasciiText;
    private javax.swing.JTextPane jTextPaneDasmByteScreenText;
    private javax.swing.JTextPane jTextPaneDasmByteShiftText;
    private javax.swing.JTextPane jTextPaneDasmByteText;
    private javax.swing.JTextPane jTextPaneDasmByteZeroText;
    private javax.swing.JTextPane jTextPaneDasmCstyleBlockComment;
    private javax.swing.JTextPane jTextPaneDasmCstyleComment;
    private javax.swing.JTextPane jTextPaneDasmDcBByte;
    private javax.swing.JTextPane jTextPaneDasmDcByte;
    private javax.swing.JTextPane jTextPaneDasmDcDotBHighText;
    private javax.swing.JTextPane jTextPaneDasmDcDotBNumText;
    private javax.swing.JTextPane jTextPaneDasmDcDotBPetasciText;
    private javax.swing.JTextPane jTextPaneDasmDcDotBScreenText;
    private javax.swing.JTextPane jTextPaneDasmDcDotBShiftText;
    private javax.swing.JTextPane jTextPaneDasmDcDotBText;
    private javax.swing.JTextPane jTextPaneDasmDcDotBZeroText;
    private javax.swing.JTextPane jTextPaneDasmDcDotSWordSwapped;
    private javax.swing.JTextPane jTextPaneDasmDcLLong;
    private javax.swing.JTextPane jTextPaneDasmDcNumText;
    private javax.swing.JTextPane jTextPaneDasmDcText;
    private javax.swing.JTextPane jTextPaneDasmDcWWord;
    private javax.swing.JTextPane jTextPaneDasmDcWWordAddress;
    private javax.swing.JTextPane jTextPaneDasmDcZeroHighText;
    private javax.swing.JTextPane jTextPaneDasmDcZeroPetasciText;
    private javax.swing.JTextPane jTextPaneDasmDcZeroScreenText;
    private javax.swing.JTextPane jTextPaneDasmDcZeroShiftText;
    private javax.swing.JTextPane jTextPaneDasmDcZeroText;
    private javax.swing.JTextPane jTextPaneDasmDotByte;
    private javax.swing.JTextPane jTextPaneDasmDotByteHighText;
    private javax.swing.JTextPane jTextPaneDasmDotByteNumText;
    private javax.swing.JTextPane jTextPaneDasmDotBytePetasciiText;
    private javax.swing.JTextPane jTextPaneDasmDotByteScreenText;
    private javax.swing.JTextPane jTextPaneDasmDotByteShiftText;
    private javax.swing.JTextPane jTextPaneDasmDotByteText;
    private javax.swing.JTextPane jTextPaneDasmDotByteZeroText;
    private javax.swing.JTextPane jTextPaneDasmDotLong;
    private javax.swing.JTextPane jTextPaneDasmDotOrigin;
    private javax.swing.JTextPane jTextPaneDasmDotWord;
    private javax.swing.JTextPane jTextPaneDasmDotWordAddress;
    private javax.swing.JTextPane jTextPaneDasmIfBlockComment;
    private javax.swing.JTextPane jTextPaneDasmLabelName;
    private javax.swing.JTextPane jTextPaneDasmLabelNameColon;
    private javax.swing.JTextPane jTextPaneDasmLong;
    private javax.swing.JTextPane jTextPaneDasmMacroBinMonoSprite;
    private javax.swing.JTextPane jTextPaneDasmMacroBinMultiSprite;
    private javax.swing.JTextPane jTextPaneDasmMacroHexMonoSprite;
    private javax.swing.JTextPane jTextPaneDasmMacroHexMultiSprite;
    private javax.swing.JTextPane jTextPaneDasmMacroStackWord;
    private javax.swing.JTextPane jTextPaneDasmMacroTribyte;
    private javax.swing.JTextPane jTextPaneDasmOrigin;
    private javax.swing.JTextPane jTextPaneDasmProcStarting;
    private javax.swing.JTextPane jTextPaneDasmSemicolonBlockComment;
    private javax.swing.JTextPane jTextPaneDasmSemicolonComment;
    private javax.swing.JTextPane jTextPaneDasmWord;
    private javax.swing.JTextPane jTextPaneDasmWordAddress;
    // End of variables declaration//GEN-END:variables


/**
  * Apply the option for DASM
  */
  public void applyOptionDasm() {
    //DASM
    jCheckBoxDasmF3Comp.setSelected(option.dasmF3Comp);
    
    switch (option.dasmStarting) {
      case PROC:
        jRadioButtonDasmProcStarting.setSelected(true);   
        break;
    }
      
    switch (option.dasmLabel) {
      case NAME:
        jRadioButtonDasmLabelName.setSelected(true);
        break;
      case NAME_COLON:
        jRadioButtonDasmLabelNameColon.setSelected(true);  
        break;  
    }
      
    switch (option.dasmComment) {
      case SEMICOLON:
        jRadioButtonDasmSemicolonComment.setSelected(true);
        break;
      case CSTYLE:
        jRadioButtonDasmCstyleComment.setSelected(true);  
        break;  
    }
      
    switch (option.dasmBlockComment) {
      case SEMICOLON:
        jRadioButtonDasmSemicolonBlockComment.setSelected(true);
        break;
      case CSTYLE:
        jRadioButtonDasmCstyleBlockComment.setSelected(true);  
        break;  
      case IF:
        jRadioButtonDasmIfBlockComment.setSelected(true);  
        break;           
    }     
      
    switch (option.dasmOrigin) {
      case DOT_ORG:
        jRadioButtonDasmDotOrigin.setSelected(true);
        break;
      case ORG:
        jRadioButtonDasmOrigin.setSelected(true);  
        break;
    }
      
    switch (option.dasmByte) {
      case DOT_BYTE:  
        jRadioButtonDasmDotByte.setSelected(true);
        break;
      case BYTE:
        jRadioButtonDasmByte.setSelected(true);  
        break;
      case DC_BYTE:
        jRadioButtonDasmDcByte.setSelected(true);   
        break; 
      case DC_B_BYTE:
        jRadioButtonDasmDcBByte.setSelected(true);  
        break;  
    }
      
    switch (option.dasmWord) {
      case DOT_WORD:  
        jRadioButtonDasmDotWord.setSelected(true);
        break;  
      case WORD:  
        jRadioButtonDasmWord.setSelected(true);
        break;
      case DC_W_WORD:  
        jRadioButtonDasmDcWWord.setSelected(true);
        break;          
    }  
    
    switch (option.dasmWordSwapped) { 
      case DC_DOT_S_WORD_SWAPPED:
        jRadioButtonDasmDcDotSWordSwapped.setSelected(true);  
        break;    
    }
    
    switch (option.dasmTribyte) {
      case MACRO_TRIBYTE:  
        jRadioButtonDasmMacroTribyte.setSelected(true);
        break;  
    }
    
    switch (option.dasmLong) {
      case DOT_LONG:  
        jRadioButtonDasmDotLong.setSelected(true);
        break;  
      case LONG:  
        jRadioButtonDasmLong.setSelected(true);
        break;  
      case DOT_DC_L_LONG:  
        jRadioButtonDasmDcLLong.setSelected(true);
        break;   
    }
    
    switch (option.dasmAddress) {
      case DOT_WORD_ADDR:  
        jRadioButtonDasmDotWordAddress.setSelected(true);
        break;  
      case WORD_ADDR:  
        jRadioButtonDasmWordAddress.setSelected(true);
        break;
      case DC_W_ADDR:  
        jRadioButtonDasmDcWWordAddress.setSelected(true);
        break;          
    } 
    
    switch (option.dasmStackWord) {
      case MACRO_STACKWORD:
        jRadioButtonDasmMacroStackWord.setSelected(true);
        break;
    }
     
    switch (option.dasmMonoSprite) {
      case BYTE_HEX:
        jRadioButtonDasmByteHexMonoSprite.setSelected(true);
        break;
      case BYTE_BIN:
        jRadioButtonDasmByteBinMonoSprite.setSelected(true);
        break;
      case MACRO_HEX:
        jRadioButtonDasmMacroHexMonoSprite.setSelected(true);
        break;  
      case MACRO_BIN:
        jRadioButtonDasmMacroBinMonoSprite.setSelected(true);
        break;  
    }
    
    switch (option.dasmMultiSprite) {
      case BYTE_HEX:
        jRadioButtonDasmByteHexMultiSprite.setSelected(true);
        break;
      case BYTE_BIN:
        jRadioButtonDasmByteBinMultiSprite.setSelected(true);
        break;
      case MACRO_HEX:
        jRadioButtonDasmMacroHexMultiSprite.setSelected(true);
        break;  
      case MACRO_BIN:
        jRadioButtonDasmMacroBinMultiSprite.setSelected(true);
        break;  
    }    
    
    switch (option.dasmText) {
      case DOT_BYTE_TEXT:
        jRadioButtonDasmDotByteText.setSelected(true);
        break;
      case BYTE_TEXT:
        jRadioButtonDasmByteText.setSelected(true);
        break;
      case DC_BYTE_TEXT:
        jRadioButtonDasmDcText.setSelected(true);
        break;  
      case DC_B_BYTE_TEXT:
        jRadioButtonDasmDcDotBText.setSelected(true);
        break;  
    }
    
    switch (option.dasmNumText) {
      case DOT_BYTE_NUMTEXT:
        jRadioButtonDasmDotByteNumText.setSelected(true);
        break;
      case BYTE_NUMTEXT:
        jRadioButtonDasmByteNumText.setSelected(true);
        break;
      case DC_NUMTEXT:
        jRadioButtonDasmDcNumText.setSelected(true);
        break;  
      case DC_DOT_B_NUMTEXT:
        jRadioButtonDasmDcDotBNumText.setSelected(true);
        break;  
    }
    
    switch (option.dasmZeroText) {
      case DOT_BYTE_ZEROTEXT:
        jRadioButtonDasmDotByteZeroText.setSelected(true);
        break;
      case BYTE_ZEROTEXT:
        jRadioButtonDasmByteZeroText.setSelected(true);
        break;
      case DC_BYTE_ZEROTEXT:
        jRadioButtonDasmDcZeroText.setSelected(true);
        break;  
      case DC_B_BYTE_ZEROTEXT:
        jRadioButtonDasmDcDotBZeroText.setSelected(true);
        break;  
    }
    
    switch (option.dasmHighText) {
      case DOT_BYTE_HIGHTEXT:
        jRadioButtonDasmDotByteHighText.setSelected(true);
        break;
      case BYTE_HIGHTEXT:
        jRadioButtonDasmByteHighText.setSelected(true);
        break;
      case DC_BYTE_HIGHTEXT:
        jRadioButtonDasmDcHighText.setSelected(true);
        break;  
      case DC_B_BYTE_HIGHTEXT:
        jRadioButtonDasmDcDotBHighText.setSelected(true);
        break;  
    }
    
    switch (option.dasmShiftText) {
      case DOT_BYTE_SHIFTTEXT:
        jRadioButtonDasmDotByteShiftText.setSelected(true);
        break;
      case BYTE_SHIFTTEXT:
        jRadioButtonDasmByteShiftText.setSelected(true);
        break;
      case DC_BYTE_SHIFTTEXT:
        jRadioButtonDasmDcShiftText.setSelected(true);
        break;  
      case DC_B_BYTE_SHIFTTEXT:
        jRadioButtonDasmDcDotBShiftText.setSelected(true);
        break;  
    }
    
    switch (option.dasmScreenText) {
      case DOT_BYTE_SCREENTEXT:
        jRadioButtonDasmDotByteScreenText.setSelected(true);
        break;
      case BYTE_SCREENTEXT:
        jRadioButtonDasmByteScreenText.setSelected(true);
        break;
      case DC_BYTE_SCREENTEXT:
        jRadioButtonDasmDcScreentText.setSelected(true);
        break;  
      case DC_B_BYTE_SCREENTEXT:
        jRadioButtonDasmDcDotBScreenText.setSelected(true);
        break;  
    }  
    
    switch (option.dasmPetasciiText) {
      case DOT_BYTE_PETASCIITEXT:
        jRadioButtonDasmDotBytePetasciiText.setSelected(true);
        break;
      case BYTE_PETASCIITEXT:
        jRadioButtonDasmBytePetasciiText.setSelected(true);
        break;
      case DC_BYTE_PETASCIITEXT:
        jRadioButtonDasmDcPetasciiText.setSelected(true);
        break;  
      case DC_B_BYTE_PETASCIITEXT:
        jRadioButtonDasmDcDotBPetasciiText.setSelected(true);
        break;  
    }   
  }

}
