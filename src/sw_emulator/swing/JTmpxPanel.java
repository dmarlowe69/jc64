/*
 * @(#)JTmpxPanel 2022/05/02
 *
 * ICE Team free software group
 *
 * This file is part of C64 Java Software Emulator.
 * See README for copyright notice.
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
 *  02111-1307  USA.
 */
package sw_emulator.swing;

import sw_emulator.software.Assembler;
import sw_emulator.swing.main.Option;

/**
 * A panel for Tmpx assembler option 
 * 
 * @author ice
 */
public class JTmpxPanel extends javax.swing.JPanel {
    /** Option to use */
    Option option;

    /**
     * Creates new form JTmpxPanel
     */
    public JTmpxPanel() {
        initComponents();
    }
    
    /**
     * Set up the panel with the option 
     * 
     * @param option the option to use
     */
    public void setUp(Option option) {
      this.option=option;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupTmpxLabel = new javax.swing.ButtonGroup();
        buttonGroupTmpxByte = new javax.swing.ButtonGroup();
        buttonGroupTmpxWord = new javax.swing.ButtonGroup();
        buttonGroupTmpxComment = new javax.swing.ButtonGroup();
        buttonGroupTmpxBlockComment = new javax.swing.ButtonGroup();
        buttonGroupTmpxOrigin = new javax.swing.ButtonGroup();
        buttonGroupTmpxStarting = new javax.swing.ButtonGroup();
        buttonGroupTmpxMonoSprite = new javax.swing.ButtonGroup();
        buttonGroupTmpxMultiSprite = new javax.swing.ButtonGroup();
        buttonGroupTmpxTribyte = new javax.swing.ButtonGroup();
        buttonGroupTmpxLong = new javax.swing.ButtonGroup();
        buttonGroupTmpxWordSwapped = new javax.swing.ButtonGroup();
        buttonGroupTmpxText = new javax.swing.ButtonGroup();
        buttonGroupTmpxNumText = new javax.swing.ButtonGroup();
        buttonGroupTmpxZeroText = new javax.swing.ButtonGroup();
        buttonGroupTmpxAddress = new javax.swing.ButtonGroup();
        buttonGroupTmpxStackWord = new javax.swing.ButtonGroup();
        buttonGroupTmpxHighText = new javax.swing.ButtonGroup();
        buttonGroupTmpxShiftText = new javax.swing.ButtonGroup();
        buttonGroupTmpxScreenText = new javax.swing.ButtonGroup();
        buttonGroupTmpxPetasciiText = new javax.swing.ButtonGroup();
        jLabelTmpxLabelDeclaration = new javax.swing.JLabel();
        jRadioButtonTmpxLabelName = new javax.swing.JRadioButton();
        jScrollPaneTmpxByte = new javax.swing.JScrollPane();
        jTextPaneTmpxLabelName = new javax.swing.JTextPane();
        jLabelTmpxByteDeclaration = new javax.swing.JLabel();
        jRadioButtonTmpxDotByte = new javax.swing.JRadioButton();
        jScrollPaneTmpxWord = new javax.swing.JScrollPane();
        jTextPaneTmpxDotByte = new javax.swing.JTextPane();
        jLabelTmpxWordDeclaration = new javax.swing.JLabel();
        jRadioButtonTmpxDotWord = new javax.swing.JRadioButton();
        jScrollPaneTmpxDotWord = new javax.swing.JScrollPane();
        jTextPaneTmpxDotWord = new javax.swing.JTextPane();
        jLabelTmpxCommentDeclaration = new javax.swing.JLabel();
        jRadioButtonTmpxSemicolonComment = new javax.swing.JRadioButton();
        jScrollPaneTmpxSemicolonComment = new javax.swing.JScrollPane();
        jTextPaneTmpxSemicolonComment = new javax.swing.JTextPane();
        jLabelTmpxBlockCommentDeclaration = new javax.swing.JLabel();
        jRadioButtonTmpxSemicolonBlockComment = new javax.swing.JRadioButton();
        jScrollPaneTmpxSemicolonBlockComment = new javax.swing.JScrollPane();
        jTextPaneTmpxSemicolonBlockComment = new javax.swing.JTextPane();
        jLabelTmpxOriginDeclaration = new javax.swing.JLabel();
        jRadioButtonTmpxAsterixOrigin = new javax.swing.JRadioButton();
        jScrollPaneTmpxAsterixOrigin = new javax.swing.JScrollPane();
        jTextPaneTmpxAsterixOrigin = new javax.swing.JTextPane();
        jRadioButtonTmpxDotIfBlockComment = new javax.swing.JRadioButton();
        jScrollPaneTmpxDotIfBlockComment = new javax.swing.JScrollPane();
        jTextPaneTmpxDotIfBlockComment = new javax.swing.JTextPane();
        jLabelTmpxStartingDeclaration = new javax.swing.JLabel();
        jRadioButtonTmpxFakeStarting = new javax.swing.JRadioButton();
        jScrollPaneTmpxFakeStarting = new javax.swing.JScrollPane();
        jTextPaneTmpxFakeStarting = new javax.swing.JTextPane();
        jLabelTmpxMonoSpriteDeclaration = new javax.swing.JLabel();
        jLabelTmpxMultiSpriteDeclaration = new javax.swing.JLabel();
        jRadioButtonTmpxByteHexMonoSprite = new javax.swing.JRadioButton();
        jRadioButtonTmpxByteHexMultiSprite = new javax.swing.JRadioButton();
        jScrollPaneTmpxByteHexMultiSprite = new javax.swing.JScrollPane();
        TmpxPaneTmpxByteHexMultiSprite = new javax.swing.JTextPane();
        jScrollPaneTmpxByteHexMonoSprite = new javax.swing.JScrollPane();
        jTextPaneTmpxByteHexMonoSprite = new javax.swing.JTextPane();
        jRadioButtonTmpxByteBinMonoSprite = new javax.swing.JRadioButton();
        jRadioButtonTmpxByteBinMultiSprite = new javax.swing.JRadioButton();
        jScrollPaneTmpxByteBinMultiSprite = new javax.swing.JScrollPane();
        jTextPaneTmpxByteBinMultiSprite = new javax.swing.JTextPane();
        jScrollPaneTmpxByteBinMonoSprite = new javax.swing.JScrollPane();
        jTextPaneTmpxByteBinMonoSprite = new javax.swing.JTextPane();
        jRadioButtonTmpxMacroHexMonoSprite = new javax.swing.JRadioButton();
        jRadioButtonTmpxMacroHexMultiSprite = new javax.swing.JRadioButton();
        jScrollPaneTmpxMacroHexMultiSprite = new javax.swing.JScrollPane();
        jTextPaneTmpxMacroHexMultiSprite = new javax.swing.JTextPane();
        jScrollPaneTmpxMacroHexMonoSprite = new javax.swing.JScrollPane();
        jTextPaneTmpxMacroHexMonoSprite = new javax.swing.JTextPane();
        jRadioButtonTmpxMacroBinMonoSprite = new javax.swing.JRadioButton();
        jRadioButtonTmpxMacroBinMultiSprite = new javax.swing.JRadioButton();
        jScrollPaneTmpxMacroBinMultiSprite = new javax.swing.JScrollPane();
        jTextPaneTmpxMacroBinMultiSprite = new javax.swing.JTextPane();
        jScrollPaneTmpxMacroBinMonoSprite = new javax.swing.JScrollPane();
        jTextPaneTmpxMacroBinMonoSprite = new javax.swing.JTextPane();
        jLabelTmpxTribyteDeclaration = new javax.swing.JLabel();
        jRadioButtonTmpxMacroTribyte = new javax.swing.JRadioButton();
        jScrollPaneTmpxMacroTribyte = new javax.swing.JScrollPane();
        jTextPaneTmpxMacroTribyte = new javax.swing.JTextPane();
        jLabelTmpxLongDeclaration = new javax.swing.JLabel();
        jRadioButtonTmpxMacroLong = new javax.swing.JRadioButton();
        jScrollPaneTmpxMacroLong = new javax.swing.JScrollPane();
        jTextPaneTmpxMacroLong = new javax.swing.JTextPane();
        jLabelTmpxWordSwappedDeclaration = new javax.swing.JLabel();
        jRadioButtonTmpxMacroWordSwapped = new javax.swing.JRadioButton();
        jScrollPaneTmpxMacroWordSwapped = new javax.swing.JScrollPane();
        jTextPaneTmpxMacroWordSwapped = new javax.swing.JTextPane();
        jLabelTmpxTextDeclaration = new javax.swing.JLabel();
        jRadioButtonTmpxDotText = new javax.swing.JRadioButton();
        jScrollPaneTmpxDotText = new javax.swing.JScrollPane();
        jTextPaneTmpxDotText = new javax.swing.JTextPane();
        jLabelTmpxNumTextDeclaration = new javax.swing.JLabel();
        jRadioButtonTmpxPTextNumText = new javax.swing.JRadioButton();
        jScrollPaneTmpxDotTextNumText = new javax.swing.JScrollPane();
        jTextPaneTmpxDotTextNumText = new javax.swing.JTextPane();
        jLabelTmpxZeroTextDeclaration = new javax.swing.JLabel();
        jRadioButtonTmpxDotNullZeroText = new javax.swing.JRadioButton();
        jScrollPaneTmpxDotNullZeroText = new javax.swing.JScrollPane();
        jTextPaneTmpxDotNullZeroText = new javax.swing.JTextPane();
        jLabelTmpxAddressDeclaration = new javax.swing.JLabel();
        jRadioButtonTmpxDotAddrAddress = new javax.swing.JRadioButton();
        jScrollPaneTmpxDotAddrAddress = new javax.swing.JScrollPane();
        jTextPaneTmpxDotAddrAddress = new javax.swing.JTextPane();
        jLabelTmpxStackWordDeclaration = new javax.swing.JLabel();
        jRadioButtonTmpxDotRdaStackWord = new javax.swing.JRadioButton();
        jScrollPaneTmpxDotRtaStackWord = new javax.swing.JScrollPane();
        jTextPaneTmpxDotRtaStackWord = new javax.swing.JTextPane();
        jLabelTmpxHighTextDeclaration = new javax.swing.JLabel();
        jRadioButtonTmpxDotShiftHighText = new javax.swing.JRadioButton();
        jScrollPaneTmpxDotShiftHighText = new javax.swing.JScrollPane();
        jTextPaneTmpxDotShiftHighText = new javax.swing.JTextPane();
        jLabelTmpxShiftTextDeclaration = new javax.swing.JLabel();
        jRadioButtonTmpxDotShiflShiftText = new javax.swing.JRadioButton();
        jScrollPaneTmpxDotShiftlShiftText = new javax.swing.JScrollPane();
        jTextPaneTmpxDotShiflShiftText = new javax.swing.JTextPane();
        jLabelTmpxScreenTextDeclaration = new javax.swing.JLabel();
        jRadioButtonTmpxDotScreenText = new javax.swing.JRadioButton();
        jScrollPaneTmpxDotScreenText = new javax.swing.JScrollPane();
        jTextPaneTmpxDotScreenText = new javax.swing.JTextPane();
        jLabelTmpxPetasciiTextDeclaration = new javax.swing.JLabel();
        jRadioButtonTmpxDotPetasciiText = new javax.swing.JRadioButton();
        jScrollPaneTmpxDotPetasciiText = new javax.swing.JScrollPane();
        jTextPaneTmpxDotPetasciiText = new javax.swing.JTextPane();

        jLabelTmpxLabelDeclaration.setText("Label:");

        buttonGroupTmpxLabel.add(jRadioButtonTmpxLabelName);
        jRadioButtonTmpxLabelName.setSelected(true);

        jScrollPaneTmpxByte.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneTmpxByte.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneTmpxLabelName.setEditable(false);
        jTextPaneTmpxLabelName.setContentType("text/html"); // NOI18N
        jTextPaneTmpxLabelName.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n     <font color='black'>zzzz</font>\n    </p\n  </body>\n</html>\n");
        jScrollPaneTmpxByte.setViewportView(jTextPaneTmpxLabelName);

        jLabelTmpxByteDeclaration.setText("Byte:");

        buttonGroupTmpxByte.add(jRadioButtonTmpxDotByte);
        jRadioButtonTmpxDotByte.setSelected(true);

        jScrollPaneTmpxWord.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneTmpxWord.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneTmpxDotByte.setEditable(false);
        jTextPaneTmpxDotByte.setContentType("text/html"); // NOI18N
        jTextPaneTmpxDotByte.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> .byte</b> <font color='red'>$xx</font><br>\n     <b> .byte</b> <font color='blue'>dd</font><br>\n     <b> .byte</b> <font color='green'>%bb</font><br>\n     <b> .byte</b> <font color='purple'>'c'</font>\n    </p>\n  </body>\n</html>\n");
        jScrollPaneTmpxWord.setViewportView(jTextPaneTmpxDotByte);

        jLabelTmpxWordDeclaration.setText("Word:");

        buttonGroupTmpxWord.add(jRadioButtonTmpxDotWord);
        jRadioButtonTmpxDotWord.setSelected(true);
        jRadioButtonTmpxDotWord.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonTmpxDotWordItemStateChanged(evt);
            }
        });

        jScrollPaneTmpxDotWord.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneTmpxDotWord.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneTmpxDotWord.setEditable(false);
        jTextPaneTmpxDotWord.setContentType("text/html"); // NOI18N
        jTextPaneTmpxDotWord.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> .word</b> <font color='red'>$xxyy</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneTmpxDotWord.setViewportView(jTextPaneTmpxDotWord);

        jLabelTmpxCommentDeclaration.setText("Comment:");

        buttonGroupTmpxComment.add(jRadioButtonTmpxSemicolonComment);
        jRadioButtonTmpxSemicolonComment.setSelected(true);
        jRadioButtonTmpxSemicolonComment.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonTmpxSemicolonCommentItemStateChanged(evt);
            }
        });

        jScrollPaneTmpxSemicolonComment.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneTmpxSemicolonComment.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneTmpxSemicolonComment.setEditable(false);
        jTextPaneTmpxSemicolonComment.setContentType("text/html"); // NOI18N
        jTextPaneTmpxSemicolonComment.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n     <b>;</b> xxx\n    </p>\n  </body>\n</html>\n");
        jScrollPaneTmpxSemicolonComment.setViewportView(jTextPaneTmpxSemicolonComment);

        jLabelTmpxBlockCommentDeclaration.setText("Block Comment:");

        buttonGroupTmpxBlockComment.add(jRadioButtonTmpxSemicolonBlockComment);
        jRadioButtonTmpxSemicolonBlockComment.setSelected(true);
        jRadioButtonTmpxSemicolonBlockComment.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonTmpxSemicolonBlockCommentItemStateChanged(evt);
            }
        });

        jScrollPaneTmpxSemicolonBlockComment.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneTmpxSemicolonBlockComment.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneTmpxSemicolonBlockComment.setEditable(false);
        jTextPaneTmpxSemicolonBlockComment.setContentType("text/html"); // NOI18N
        jTextPaneTmpxSemicolonBlockComment.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n     <b>;</b> xxx\n    </p>\n  </body>\n</html>\n");
        jScrollPaneTmpxSemicolonBlockComment.setViewportView(jTextPaneTmpxSemicolonBlockComment);

        jLabelTmpxOriginDeclaration.setText("Origin:");

        buttonGroupTmpxOrigin.add(jRadioButtonTmpxAsterixOrigin);
        jRadioButtonTmpxAsterixOrigin.setSelected(true);
        jRadioButtonTmpxAsterixOrigin.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonTmpxAsterixOriginItemStateChanged(evt);
            }
        });

        jScrollPaneTmpxAsterixOrigin.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneTmpxAsterixOrigin.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneTmpxAsterixOrigin.setEditable(false);
        jTextPaneTmpxAsterixOrigin.setContentType("text/html"); // NOI18N
        jTextPaneTmpxAsterixOrigin.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n     <b>*=</b>$xxyy\n    </p>\n  </body>\n</html>\n");
        jScrollPaneTmpxAsterixOrigin.setViewportView(jTextPaneTmpxAsterixOrigin);

        buttonGroupTmpxBlockComment.add(jRadioButtonTmpxDotIfBlockComment);
        jRadioButtonTmpxDotIfBlockComment.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonTmpxDotIfBlockCommentItemStateChanged(evt);
            }
        });

        jScrollPaneTmpxDotIfBlockComment.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneTmpxDotIfBlockComment.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneTmpxDotIfBlockComment.setEditable(false);
        jTextPaneTmpxDotIfBlockComment.setContentType("text/html"); // NOI18N
        jTextPaneTmpxDotIfBlockComment.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n     <b>if 0</b> xxx <b'>endif</b>\n    </p>\n  </body>\n</html>\n");
        jScrollPaneTmpxDotIfBlockComment.setViewportView(jTextPaneTmpxDotIfBlockComment);

        jLabelTmpxStartingDeclaration.setText("Starting:");

        buttonGroupTmpxStarting.add(jRadioButtonTmpxFakeStarting);
        jRadioButtonTmpxFakeStarting.setSelected(true);
        jRadioButtonTmpxFakeStarting.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonTmpxFakeStartingItemStateChanged(evt);
            }
        });

        jScrollPaneTmpxFakeStarting.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneTmpxFakeStarting.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneTmpxFakeStarting.setEditable(false);
        jTextPaneTmpxFakeStarting.setContentType("text/html"); // NOI18N
        jTextPaneTmpxFakeStarting.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n     <b>cpu</b>  = 6502\n    </p>\n  </body>\n</html>\n");
        jScrollPaneTmpxFakeStarting.setViewportView(jTextPaneTmpxFakeStarting);

        jLabelTmpxMonoSpriteDeclaration.setText("Monocolor sprite:");

        jLabelTmpxMultiSpriteDeclaration.setText("Multicolor sprite:");

        buttonGroupTmpxMonoSprite.add(jRadioButtonTmpxByteHexMonoSprite);
        jRadioButtonTmpxByteHexMonoSprite.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonTmpxByteHexMonoSpriteItemStateChanged(evt);
            }
        });

        buttonGroupTmpxMultiSprite.add(jRadioButtonTmpxByteHexMultiSprite);
        jRadioButtonTmpxByteHexMultiSprite.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonTmpxByteHexMultiSpriteItemStateChanged(evt);
            }
        });

        jScrollPaneTmpxByteHexMultiSprite.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneTmpxByteHexMultiSprite.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        TmpxPaneTmpxByteHexMultiSprite.setEditable(false);
        TmpxPaneTmpxByteHexMultiSprite.setContentType("text/html"); // NOI18N
        TmpxPaneTmpxByteHexMultiSprite.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> [byte]</b> <font color='red'>$xx..</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneTmpxByteHexMultiSprite.setViewportView(TmpxPaneTmpxByteHexMultiSprite);

        jScrollPaneTmpxByteHexMonoSprite.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneTmpxByteHexMonoSprite.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneTmpxByteHexMonoSprite.setEditable(false);
        jTextPaneTmpxByteHexMonoSprite.setContentType("text/html"); // NOI18N
        jTextPaneTmpxByteHexMonoSprite.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> [byte]</b> <font color='red'>$xx..</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneTmpxByteHexMonoSprite.setViewportView(jTextPaneTmpxByteHexMonoSprite);

        buttonGroupTmpxMonoSprite.add(jRadioButtonTmpxByteBinMonoSprite);
        jRadioButtonTmpxByteBinMonoSprite.setSelected(true);
        jRadioButtonTmpxByteBinMonoSprite.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonTmpxByteBinMonoSpriteItemStateChanged(evt);
            }
        });

        buttonGroupTmpxMultiSprite.add(jRadioButtonTmpxByteBinMultiSprite);
        jRadioButtonTmpxByteBinMultiSprite.setSelected(true);
        jRadioButtonTmpxByteBinMultiSprite.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonTmpxByteBinMultiSpriteItemStateChanged(evt);
            }
        });

        jScrollPaneTmpxByteBinMultiSprite.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneTmpxByteBinMultiSprite.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneTmpxByteBinMultiSprite.setEditable(false);
        jTextPaneTmpxByteBinMultiSprite.setContentType("text/html"); // NOI18N
        jTextPaneTmpxByteBinMultiSprite.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>[byte]</b> <font color='red'>%b..</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneTmpxByteBinMultiSprite.setViewportView(jTextPaneTmpxByteBinMultiSprite);

        jScrollPaneTmpxByteBinMonoSprite.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneTmpxByteBinMonoSprite.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneTmpxByteBinMonoSprite.setEditable(false);
        jTextPaneTmpxByteBinMonoSprite.setContentType("text/html"); // NOI18N
        jTextPaneTmpxByteBinMonoSprite.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>[byte]</b> <font color='red'>%b..</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneTmpxByteBinMonoSprite.setViewportView(jTextPaneTmpxByteBinMonoSprite);

        buttonGroupTmpxMonoSprite.add(jRadioButtonTmpxMacroHexMonoSprite);
        jRadioButtonTmpxMacroHexMonoSprite.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonTmpxMacroHexMonoSpriteItemStateChanged(evt);
            }
        });

        buttonGroupTmpxMultiSprite.add(jRadioButtonTmpxMacroHexMultiSprite);
        jRadioButtonTmpxMacroHexMultiSprite.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonTmpxMacroHexMultiSpriteItemStateChanged(evt);
            }
        });

        jScrollPaneTmpxMacroHexMultiSprite.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneTmpxMacroHexMultiSprite.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneTmpxMacroHexMultiSprite.setEditable(false);
        jTextPaneTmpxMacroHexMultiSprite.setContentType("text/html"); // NOI18N
        jTextPaneTmpxMacroHexMultiSprite.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>[.mac] </b> <font color='red'>$xx..</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneTmpxMacroHexMultiSprite.setViewportView(jTextPaneTmpxMacroHexMultiSprite);

        jScrollPaneTmpxMacroHexMonoSprite.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneTmpxMacroHexMonoSprite.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneTmpxMacroHexMonoSprite.setEditable(false);
        jTextPaneTmpxMacroHexMonoSprite.setContentType("text/html"); // NOI18N
        jTextPaneTmpxMacroHexMonoSprite.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>[.mac] </b> <font color='red'>$xx..</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneTmpxMacroHexMonoSprite.setViewportView(jTextPaneTmpxMacroHexMonoSprite);

        buttonGroupTmpxMonoSprite.add(jRadioButtonTmpxMacroBinMonoSprite);
        jRadioButtonTmpxMacroBinMonoSprite.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonTmpxMacroBinMonoSpriteItemStateChanged(evt);
            }
        });

        buttonGroupTmpxMultiSprite.add(jRadioButtonTmpxMacroBinMultiSprite);
        jRadioButtonTmpxMacroBinMultiSprite.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonTmpxMacroBinMultiSpriteItemStateChanged(evt);
            }
        });

        jScrollPaneTmpxMacroBinMultiSprite.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneTmpxMacroBinMultiSprite.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneTmpxMacroBinMultiSprite.setEditable(false);
        jTextPaneTmpxMacroBinMultiSprite.setContentType("text/html"); // NOI18N
        jTextPaneTmpxMacroBinMultiSprite.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>[.mac] </b> <font color='red'>%b..</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneTmpxMacroBinMultiSprite.setViewportView(jTextPaneTmpxMacroBinMultiSprite);

        jScrollPaneTmpxMacroBinMonoSprite.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneTmpxMacroBinMonoSprite.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneTmpxMacroBinMonoSprite.setEditable(false);
        jTextPaneTmpxMacroBinMonoSprite.setContentType("text/html"); // NOI18N
        jTextPaneTmpxMacroBinMonoSprite.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>[.mac] </b> <font color='red'>%b..</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneTmpxMacroBinMonoSprite.setViewportView(jTextPaneTmpxMacroBinMonoSprite);

        jLabelTmpxTribyteDeclaration.setText("Tribyte:");

        buttonGroupTmpxTribyte.add(jRadioButtonTmpxMacroTribyte);
        jRadioButtonTmpxMacroTribyte.setSelected(true);
        jRadioButtonTmpxMacroTribyte.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonTmpxMacroTribyteItemStateChanged(evt);
            }
        });

        jScrollPaneTmpxMacroTribyte.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneTmpxMacroTribyte.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneTmpxMacroTribyte.setEditable(false);
        jTextPaneTmpxMacroTribyte.setContentType("text/html"); // NOI18N
        jTextPaneTmpxMacroTribyte.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>[.mac]</b> <font color='red'>$xxyyzz</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneTmpxMacroTribyte.setViewportView(jTextPaneTmpxMacroTribyte);

        jLabelTmpxLongDeclaration.setText("Long:");

        buttonGroupTmpxLong.add(jRadioButtonTmpxMacroLong);
        jRadioButtonTmpxMacroLong.setSelected(true);
        jRadioButtonTmpxMacroLong.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonTmpxMacroLongItemStateChanged(evt);
            }
        });

        jScrollPaneTmpxMacroLong.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneTmpxMacroLong.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneTmpxMacroLong.setEditable(false);
        jTextPaneTmpxMacroLong.setContentType("text/html"); // NOI18N
        jTextPaneTmpxMacroLong.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>[.mac]</b> <font color='red'>$xxyyzzkk</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneTmpxMacroLong.setViewportView(jTextPaneTmpxMacroLong);

        jLabelTmpxWordSwappedDeclaration.setText("Word Swapped:");

        buttonGroupTmpxWordSwapped.add(jRadioButtonTmpxMacroWordSwapped);
        jRadioButtonTmpxMacroWordSwapped.setSelected(true);
        jRadioButtonTmpxMacroWordSwapped.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonTmpxMacroWordSwappedItemStateChanged(evt);
            }
        });

        jScrollPaneTmpxMacroWordSwapped.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneTmpxMacroWordSwapped.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneTmpxMacroWordSwapped.setEditable(false);
        jTextPaneTmpxMacroWordSwapped.setContentType("text/html"); // NOI18N
        jTextPaneTmpxMacroWordSwapped.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b>[.mac]</b> <font color='red'>$yyxx</font><br>\n    </p>\n  </body>\n</html>\n");
        jScrollPaneTmpxMacroWordSwapped.setViewportView(jTextPaneTmpxMacroWordSwapped);

        jLabelTmpxTextDeclaration.setText("Text:");

        buttonGroupTmpxText.add(jRadioButtonTmpxDotText);
        jRadioButtonTmpxDotText.setSelected(true);
        jRadioButtonTmpxDotText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonTmpxDotTextItemStateChanged(evt);
            }
        });

        jScrollPaneTmpxDotText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneTmpxDotText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneTmpxDotText.setEditable(false);
        jTextPaneTmpxDotText.setContentType("text/html"); // NOI18N
        jTextPaneTmpxDotText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> .text</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneTmpxDotText.setViewportView(jTextPaneTmpxDotText);

        jLabelTmpxNumTextDeclaration.setText("Text #num chars:");

        buttonGroupTmpxNumText.add(jRadioButtonTmpxPTextNumText);
        jRadioButtonTmpxPTextNumText.setSelected(true);
        jRadioButtonTmpxPTextNumText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonTmpxPTextNumTextItemStateChanged(evt);
            }
        });

        jScrollPaneTmpxDotTextNumText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneTmpxDotTextNumText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneTmpxDotTextNumText.setEditable(false);
        jTextPaneTmpxDotTextNumText.setContentType("text/html"); // NOI18N
        jTextPaneTmpxDotTextNumText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> .ptext</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jTextPaneTmpxDotTextNumText.setPreferredSize(new java.awt.Dimension(66, 20));
        jScrollPaneTmpxDotTextNumText.setViewportView(jTextPaneTmpxDotTextNumText);

        jLabelTmpxZeroTextDeclaration.setText("Text 0 terminated:");

        buttonGroupTmpxZeroText.add(jRadioButtonTmpxDotNullZeroText);
        jRadioButtonTmpxDotNullZeroText.setSelected(true);
        jRadioButtonTmpxDotNullZeroText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonTmpxDotNullZeroTextItemStateChanged(evt);
            }
        });

        jScrollPaneTmpxDotNullZeroText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneTmpxDotNullZeroText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneTmpxDotNullZeroText.setEditable(false);
        jTextPaneTmpxDotNullZeroText.setContentType("text/html"); // NOI18N
        jTextPaneTmpxDotNullZeroText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> .null</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneTmpxDotNullZeroText.setViewportView(jTextPaneTmpxDotNullZeroText);

        jLabelTmpxAddressDeclaration.setText("Address:");

        buttonGroupTmpxAddress.add(jRadioButtonTmpxDotAddrAddress);
        jRadioButtonTmpxDotAddrAddress.setSelected(true);
        jRadioButtonTmpxDotAddrAddress.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonTmpxDotAddrAddressItemStateChanged(evt);
            }
        });

        jScrollPaneTmpxDotAddrAddress.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneTmpxDotAddrAddress.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneTmpxDotAddrAddress.setEditable(false);
        jTextPaneTmpxDotAddrAddress.setContentType("text/html"); // NOI18N
        jTextPaneTmpxDotAddrAddress.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> .addr</b> <font color='red'>$xxyy</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneTmpxDotAddrAddress.setViewportView(jTextPaneTmpxDotAddrAddress);

        jLabelTmpxStackWordDeclaration.setText("Stack Word:");

        buttonGroupTmpxStackWord.add(jRadioButtonTmpxDotRdaStackWord);
        jRadioButtonTmpxDotRdaStackWord.setSelected(true);
        jRadioButtonTmpxDotRdaStackWord.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonTmpxDotRdaStackWordItemStateChanged(evt);
            }
        });

        jScrollPaneTmpxDotRtaStackWord.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneTmpxDotRtaStackWord.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneTmpxDotRtaStackWord.setEditable(false);
        jTextPaneTmpxDotRtaStackWord.setContentType("text/html"); // NOI18N
        jTextPaneTmpxDotRtaStackWord.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> .rta</b> <font color='red'>$xxyy</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneTmpxDotRtaStackWord.setViewportView(jTextPaneTmpxDotRtaStackWord);

        jLabelTmpxHighTextDeclaration.setText("Text '1' terminated:");

        buttonGroupTmpxHighText.add(jRadioButtonTmpxDotShiftHighText);
        jRadioButtonTmpxDotShiftHighText.setSelected(true);
        jRadioButtonTmpxDotShiftHighText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonTmpxDotShiftHighTextItemStateChanged(evt);
            }
        });

        jScrollPaneTmpxDotShiftHighText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneTmpxDotShiftHighText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneTmpxDotShiftHighText.setEditable(false);
        jTextPaneTmpxDotShiftHighText.setContentType("text/html"); // NOI18N
        jTextPaneTmpxDotShiftHighText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> .shift</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jTextPaneTmpxDotShiftHighText.setPreferredSize(new java.awt.Dimension(66, 20));
        jScrollPaneTmpxDotShiftHighText.setViewportView(jTextPaneTmpxDotShiftHighText);

        jLabelTmpxShiftTextDeclaration.setText("Text left shifted:");

        buttonGroupTmpxShiftText.add(jRadioButtonTmpxDotShiflShiftText);
        jRadioButtonTmpxDotShiflShiftText.setSelected(true);
        jRadioButtonTmpxDotShiflShiftText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonTmpxDotShiflShiftTextItemStateChanged(evt);
            }
        });

        jScrollPaneTmpxDotShiftlShiftText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneTmpxDotShiftlShiftText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneTmpxDotShiflShiftText.setEditable(false);
        jTextPaneTmpxDotShiflShiftText.setContentType("text/html"); // NOI18N
        jTextPaneTmpxDotShiflShiftText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> .shiftl</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jTextPaneTmpxDotShiflShiftText.setPreferredSize(new java.awt.Dimension(66, 20));
        jScrollPaneTmpxDotShiftlShiftText.setViewportView(jTextPaneTmpxDotShiflShiftText);

        jLabelTmpxScreenTextDeclaration.setText("Text to screen code:");

        buttonGroupTmpxScreenText.add(jRadioButtonTmpxDotScreenText);
        jRadioButtonTmpxDotScreenText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonTmpxDotScreenTextItemStateChanged(evt);
            }
        });

        jScrollPaneTmpxDotScreenText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneTmpxDotScreenText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneTmpxDotScreenText.setEditable(false);
        jTextPaneTmpxDotScreenText.setContentType("text/html"); // NOI18N
        jTextPaneTmpxDotScreenText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> .screen</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneTmpxDotScreenText.setViewportView(jTextPaneTmpxDotScreenText);

        jLabelTmpxPetasciiTextDeclaration.setText("Text to petascii code:");

        buttonGroupTmpxPetasciiText.add(jRadioButtonTmpxDotPetasciiText);
        jRadioButtonTmpxDotPetasciiText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonTmpxDotPetasciiTextItemStateChanged(evt);
            }
        });

        jScrollPaneTmpxDotPetasciiText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneTmpxDotPetasciiText.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPaneTmpxDotPetasciiText.setEditable(false);
        jTextPaneTmpxDotPetasciiText.setContentType("text/html"); // NOI18N
        jTextPaneTmpxDotPetasciiText.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <b> .text</b> <font color='red'>\"xxx\"</font><br>\n\n    </p>\n  </body>\n</html>\n");
        jScrollPaneTmpxDotPetasciiText.setViewportView(jTextPaneTmpxDotPetasciiText);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 793, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabelTmpxStartingDeclaration, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelTmpxOriginDeclaration, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelTmpxCommentDeclaration, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelTmpxLabelDeclaration, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                        .addComponent(jLabelTmpxBlockCommentDeclaration, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelTmpxByteDeclaration, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                        .addComponent(jLabelTmpxWordDeclaration, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                        .addComponent(jLabelTmpxWordSwappedDeclaration, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                        .addComponent(jLabelTmpxTribyteDeclaration, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                        .addComponent(jLabelTmpxLongDeclaration, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                        .addComponent(jLabelTmpxAddressDeclaration, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                        .addComponent(jLabelTmpxStackWordDeclaration, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                        .addComponent(jLabelTmpxMonoSpriteDeclaration, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                        .addComponent(jLabelTmpxMultiSpriteDeclaration, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                        .addComponent(jLabelTmpxTextDeclaration, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                        .addComponent(jLabelTmpxNumTextDeclaration, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                        .addComponent(jLabelTmpxZeroTextDeclaration, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                        .addComponent(jLabelTmpxHighTextDeclaration, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelTmpxShiftTextDeclaration, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelTmpxScreenTextDeclaration, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelTmpxPetasciiTextDeclaration, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jRadioButtonTmpxFakeStarting)
                        .addComponent(jRadioButtonTmpxAsterixOrigin)
                        .addComponent(jRadioButtonTmpxSemicolonComment)
                        .addComponent(jRadioButtonTmpxSemicolonBlockComment)
                        .addComponent(jRadioButtonTmpxLabelName)
                        .addComponent(jRadioButtonTmpxDotByte)
                        .addComponent(jRadioButtonTmpxDotWord)
                        .addComponent(jRadioButtonTmpxMacroWordSwapped)
                        .addComponent(jRadioButtonTmpxMacroTribyte)
                        .addComponent(jRadioButtonTmpxMacroLong)
                        .addComponent(jRadioButtonTmpxDotAddrAddress)
                        .addComponent(jRadioButtonTmpxDotRdaStackWord)
                        .addComponent(jRadioButtonTmpxByteHexMonoSprite)
                        .addComponent(jRadioButtonTmpxByteHexMultiSprite)
                        .addComponent(jRadioButtonTmpxDotText)
                        .addComponent(jRadioButtonTmpxPTextNumText)
                        .addComponent(jRadioButtonTmpxDotNullZeroText)
                        .addComponent(jRadioButtonTmpxDotShiftHighText)
                        .addComponent(jRadioButtonTmpxDotShiflShiftText)
                        .addComponent(jRadioButtonTmpxDotScreenText)
                        .addComponent(jRadioButtonTmpxDotPetasciiText))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPaneTmpxFakeStarting)
                        .addComponent(jScrollPaneTmpxAsterixOrigin)
                        .addComponent(jScrollPaneTmpxSemicolonComment)
                        .addComponent(jScrollPaneTmpxSemicolonBlockComment)
                        .addComponent(jScrollPaneTmpxByte)
                        .addComponent(jScrollPaneTmpxWord)
                        .addComponent(jScrollPaneTmpxDotWord)
                        .addComponent(jScrollPaneTmpxMacroWordSwapped)
                        .addComponent(jScrollPaneTmpxMacroTribyte)
                        .addComponent(jScrollPaneTmpxMacroLong, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                        .addComponent(jScrollPaneTmpxDotAddrAddress)
                        .addComponent(jScrollPaneTmpxDotRtaStackWord)
                        .addComponent(jScrollPaneTmpxByteHexMonoSprite)
                        .addComponent(jScrollPaneTmpxByteHexMultiSprite)
                        .addComponent(jScrollPaneTmpxDotText)
                        .addComponent(jScrollPaneTmpxDotTextNumText)
                        .addComponent(jScrollPaneTmpxDotNullZeroText)
                        .addComponent(jScrollPaneTmpxDotShiftHighText)
                        .addComponent(jScrollPaneTmpxDotShiftlShiftText)
                        .addComponent(jScrollPaneTmpxDotScreenText)
                        .addComponent(jScrollPaneTmpxDotPetasciiText))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jRadioButtonTmpxDotIfBlockComment)
                        .addComponent(jRadioButtonTmpxByteBinMonoSprite)
                        .addComponent(jRadioButtonTmpxByteBinMultiSprite))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPaneTmpxByteBinMonoSprite, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPaneTmpxDotIfBlockComment, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPaneTmpxByteBinMultiSprite, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jRadioButtonTmpxMacroHexMonoSprite)
                        .addComponent(jRadioButtonTmpxMacroHexMultiSprite))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPaneTmpxMacroHexMonoSprite, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                        .addComponent(jScrollPaneTmpxMacroHexMultiSprite, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jRadioButtonTmpxMacroBinMultiSprite)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jScrollPaneTmpxMacroBinMultiSprite))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jRadioButtonTmpxMacroBinMonoSprite)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jScrollPaneTmpxMacroBinMonoSprite, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(19, 19, 19)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 816, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(33, 33, 33)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jLabelTmpxStartingDeclaration)
                        .addComponent(jRadioButtonTmpxFakeStarting)
                        .addComponent(jScrollPaneTmpxFakeStarting, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(11, 11, 11)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jLabelTmpxOriginDeclaration)
                        .addComponent(jRadioButtonTmpxAsterixOrigin)
                        .addComponent(jScrollPaneTmpxAsterixOrigin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jLabelTmpxCommentDeclaration)
                        .addComponent(jRadioButtonTmpxSemicolonComment)
                        .addComponent(jScrollPaneTmpxSemicolonComment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(11, 11, 11)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(jRadioButtonTmpxDotIfBlockComment)
                                .addComponent(jScrollPaneTmpxDotIfBlockComment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(12, 12, 12)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(jLabelTmpxBlockCommentDeclaration, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jRadioButtonTmpxSemicolonBlockComment)
                                .addComponent(jScrollPaneTmpxSemicolonBlockComment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(jLabelTmpxLabelDeclaration)
                                .addComponent(jRadioButtonTmpxLabelName)
                                .addComponent(jScrollPaneTmpxByte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(jLabelTmpxByteDeclaration)
                                .addComponent(jRadioButtonTmpxDotByte)
                                .addComponent(jScrollPaneTmpxWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(jLabelTmpxWordDeclaration)
                                .addComponent(jRadioButtonTmpxDotWord)
                                .addComponent(jScrollPaneTmpxDotWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(jLabelTmpxWordSwappedDeclaration, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jRadioButtonTmpxMacroWordSwapped)
                                .addComponent(jScrollPaneTmpxMacroWordSwapped, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(jLabelTmpxTribyteDeclaration, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jRadioButtonTmpxMacroTribyte)
                                .addComponent(jScrollPaneTmpxMacroTribyte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(4, 4, 4)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(jLabelTmpxLongDeclaration, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jRadioButtonTmpxMacroLong)
                                .addComponent(jScrollPaneTmpxMacroLong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(jLabelTmpxAddressDeclaration)
                                .addComponent(jRadioButtonTmpxDotAddrAddress)
                                .addComponent(jScrollPaneTmpxDotAddrAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(jLabelTmpxStackWordDeclaration)
                                .addComponent(jRadioButtonTmpxDotRdaStackWord)
                                .addComponent(jScrollPaneTmpxDotRtaStackWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jLabelTmpxMonoSpriteDeclaration)
                        .addComponent(jRadioButtonTmpxByteHexMonoSprite)
                        .addComponent(jScrollPaneTmpxByteHexMonoSprite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jRadioButtonTmpxByteBinMonoSprite)
                        .addComponent(jScrollPaneTmpxByteBinMonoSprite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jRadioButtonTmpxMacroHexMonoSprite)
                        .addComponent(jScrollPaneTmpxMacroHexMonoSprite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jRadioButtonTmpxMacroBinMonoSprite)
                        .addComponent(jScrollPaneTmpxMacroBinMonoSprite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jLabelTmpxMultiSpriteDeclaration)
                        .addComponent(jRadioButtonTmpxByteHexMultiSprite)
                        .addComponent(jScrollPaneTmpxByteHexMultiSprite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jRadioButtonTmpxByteBinMultiSprite)
                        .addComponent(jScrollPaneTmpxByteBinMultiSprite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jRadioButtonTmpxMacroHexMultiSprite)
                        .addComponent(jScrollPaneTmpxMacroHexMultiSprite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jRadioButtonTmpxMacroBinMultiSprite)
                        .addComponent(jScrollPaneTmpxMacroBinMultiSprite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jLabelTmpxTextDeclaration)
                        .addComponent(jRadioButtonTmpxDotText)
                        .addComponent(jScrollPaneTmpxDotText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jLabelTmpxNumTextDeclaration)
                        .addComponent(jRadioButtonTmpxPTextNumText)
                        .addComponent(jScrollPaneTmpxDotTextNumText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jLabelTmpxZeroTextDeclaration)
                        .addComponent(jRadioButtonTmpxDotNullZeroText)
                        .addComponent(jScrollPaneTmpxDotNullZeroText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jLabelTmpxHighTextDeclaration)
                        .addComponent(jRadioButtonTmpxDotShiftHighText)
                        .addComponent(jScrollPaneTmpxDotShiftHighText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jLabelTmpxShiftTextDeclaration)
                        .addComponent(jRadioButtonTmpxDotShiflShiftText)
                        .addComponent(jScrollPaneTmpxDotShiftlShiftText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jLabelTmpxScreenTextDeclaration)
                        .addComponent(jRadioButtonTmpxDotScreenText)
                        .addComponent(jScrollPaneTmpxDotScreenText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jLabelTmpxPetasciiTextDeclaration)
                        .addComponent(jRadioButtonTmpxDotPetasciiText)
                        .addComponent(jScrollPaneTmpxDotPetasciiText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(33, 33, 33)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButtonTmpxDotWordItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonTmpxDotWordItemStateChanged
        option.tmpxWord=Assembler.Word.DOT_WORD;
    }//GEN-LAST:event_jRadioButtonTmpxDotWordItemStateChanged

    private void jRadioButtonTmpxSemicolonCommentItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonTmpxSemicolonCommentItemStateChanged
        option.tmpxComment=Assembler.Comment.SEMICOLON;
    }//GEN-LAST:event_jRadioButtonTmpxSemicolonCommentItemStateChanged

    private void jRadioButtonTmpxSemicolonBlockCommentItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonTmpxSemicolonBlockCommentItemStateChanged
        option.tmpxBlockComment=Assembler.BlockComment.SEMICOLON;
    }//GEN-LAST:event_jRadioButtonTmpxSemicolonBlockCommentItemStateChanged

    private void jRadioButtonTmpxAsterixOriginItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonTmpxAsterixOriginItemStateChanged
        option.tmpxOrigin=Assembler.Origin.ASTERISK;
    }//GEN-LAST:event_jRadioButtonTmpxAsterixOriginItemStateChanged

    private void jRadioButtonTmpxDotIfBlockCommentItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonTmpxDotIfBlockCommentItemStateChanged
        option.tmpxBlockComment=Assembler.BlockComment.DOT_IF;
    }//GEN-LAST:event_jRadioButtonTmpxDotIfBlockCommentItemStateChanged

    private void jRadioButtonTmpxFakeStartingItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonTmpxFakeStartingItemStateChanged
        option.tmpxStarting=Assembler.Starting.FAKE;
    }//GEN-LAST:event_jRadioButtonTmpxFakeStartingItemStateChanged

    private void jRadioButtonTmpxByteHexMonoSpriteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonTmpxByteHexMonoSpriteItemStateChanged
        option.tmpxMonoSprite=Assembler.MonoSprite.BYTE_HEX;
    }//GEN-LAST:event_jRadioButtonTmpxByteHexMonoSpriteItemStateChanged

    private void jRadioButtonTmpxByteHexMultiSpriteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonTmpxByteHexMultiSpriteItemStateChanged
        option.tmpxMultiSprite=Assembler.MultiSprite.BYTE_HEX;
    }//GEN-LAST:event_jRadioButtonTmpxByteHexMultiSpriteItemStateChanged

    private void jRadioButtonTmpxByteBinMonoSpriteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonTmpxByteBinMonoSpriteItemStateChanged
        option.tmpxMonoSprite=Assembler.MonoSprite.BYTE_BIN;
    }//GEN-LAST:event_jRadioButtonTmpxByteBinMonoSpriteItemStateChanged

    private void jRadioButtonTmpxByteBinMultiSpriteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonTmpxByteBinMultiSpriteItemStateChanged
        option.tmpxMultiSprite=Assembler.MultiSprite.BYTE_BIN;
    }//GEN-LAST:event_jRadioButtonTmpxByteBinMultiSpriteItemStateChanged

    private void jRadioButtonTmpxMacroHexMonoSpriteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonTmpxMacroHexMonoSpriteItemStateChanged
        option.tmpxMonoSprite=Assembler.MonoSprite.MACRO4_HEX;
    }//GEN-LAST:event_jRadioButtonTmpxMacroHexMonoSpriteItemStateChanged

    private void jRadioButtonTmpxMacroHexMultiSpriteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonTmpxMacroHexMultiSpriteItemStateChanged
        option.tmpxMultiSprite=Assembler.MultiSprite.MACRO4_HEX;
    }//GEN-LAST:event_jRadioButtonTmpxMacroHexMultiSpriteItemStateChanged

    private void jRadioButtonTmpxMacroBinMonoSpriteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonTmpxMacroBinMonoSpriteItemStateChanged
        option.tmpxMonoSprite=Assembler.MonoSprite.MACRO4_BIN;
    }//GEN-LAST:event_jRadioButtonTmpxMacroBinMonoSpriteItemStateChanged

    private void jRadioButtonTmpxMacroBinMultiSpriteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonTmpxMacroBinMultiSpriteItemStateChanged
        option.tmpxMultiSprite=Assembler.MultiSprite.MACRO4_BIN;
    }//GEN-LAST:event_jRadioButtonTmpxMacroBinMultiSpriteItemStateChanged

    private void jRadioButtonTmpxMacroTribyteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonTmpxMacroTribyteItemStateChanged
        option.tmpxTribyte=Assembler.Tribyte.MACRO4_TRIBYTE;
    }//GEN-LAST:event_jRadioButtonTmpxMacroTribyteItemStateChanged

    private void jRadioButtonTmpxMacroLongItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonTmpxMacroLongItemStateChanged
        option.tmpxLong=Assembler.Long.MACRO4_LONG;
    }//GEN-LAST:event_jRadioButtonTmpxMacroLongItemStateChanged

    private void jRadioButtonTmpxMacroWordSwappedItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonTmpxMacroWordSwappedItemStateChanged
        option.tmpxWordSwapped=Assembler.WordSwapped.MACRO4_WORD_SWAPPED;
    }//GEN-LAST:event_jRadioButtonTmpxMacroWordSwappedItemStateChanged

    private void jRadioButtonTmpxDotTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonTmpxDotTextItemStateChanged
        option.tmpxText=Assembler.Text.DOT_TEXT;
    }//GEN-LAST:event_jRadioButtonTmpxDotTextItemStateChanged

    private void jRadioButtonTmpxPTextNumTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonTmpxPTextNumTextItemStateChanged
        option.tmpxNumText=Assembler.NumText.DOT_PTEXT_NUMTEXT;
    }//GEN-LAST:event_jRadioButtonTmpxPTextNumTextItemStateChanged

    private void jRadioButtonTmpxDotNullZeroTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonTmpxDotNullZeroTextItemStateChanged
        option.tmpxZeroText=Assembler.ZeroText.DOT_NULL_ZEROTEXT;
    }//GEN-LAST:event_jRadioButtonTmpxDotNullZeroTextItemStateChanged

    private void jRadioButtonTmpxDotAddrAddressItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonTmpxDotAddrAddressItemStateChanged
        option.tmpxAddress=Assembler.Address.DOT_ADDR_ADDR;
    }//GEN-LAST:event_jRadioButtonTmpxDotAddrAddressItemStateChanged

    private void jRadioButtonTmpxDotRdaStackWordItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonTmpxDotRdaStackWordItemStateChanged
        option.tmpxStackWord=Assembler.StackWord.DOT_RTA_STACKWORD;
    }//GEN-LAST:event_jRadioButtonTmpxDotRdaStackWordItemStateChanged

    private void jRadioButtonTmpxDotShiftHighTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonTmpxDotShiftHighTextItemStateChanged
        option.tmpxHighText=Assembler.HighText.DOT_SHIFT_HIGHTEXT;
    }//GEN-LAST:event_jRadioButtonTmpxDotShiftHighTextItemStateChanged

    private void jRadioButtonTmpxDotShiflShiftTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonTmpxDotShiflShiftTextItemStateChanged
        option.tmpxShiftText=Assembler.ShiftText.DOT_SHIFTL_SHIFTTEXT;
    }//GEN-LAST:event_jRadioButtonTmpxDotShiflShiftTextItemStateChanged

    private void jRadioButtonTmpxDotScreenTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonTmpxDotScreenTextItemStateChanged
        option.tmpxScreenText=Assembler.ScreenText.DOT_SCREEN_SCREENTEXT;
    }//GEN-LAST:event_jRadioButtonTmpxDotScreenTextItemStateChanged

    private void jRadioButtonTmpxDotPetasciiTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonTmpxDotPetasciiTextItemStateChanged
        option.tmpxPetasciiText=Assembler.PetasciiText.DOT_TEXT_PETASCIITEXT;
    }//GEN-LAST:event_jRadioButtonTmpxDotPetasciiTextItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane TmpxPaneTmpxByteHexMultiSprite;
    private javax.swing.ButtonGroup buttonGroupTmpxAddress;
    private javax.swing.ButtonGroup buttonGroupTmpxBlockComment;
    private javax.swing.ButtonGroup buttonGroupTmpxByte;
    private javax.swing.ButtonGroup buttonGroupTmpxComment;
    private javax.swing.ButtonGroup buttonGroupTmpxHighText;
    private javax.swing.ButtonGroup buttonGroupTmpxLabel;
    private javax.swing.ButtonGroup buttonGroupTmpxLong;
    private javax.swing.ButtonGroup buttonGroupTmpxMonoSprite;
    private javax.swing.ButtonGroup buttonGroupTmpxMultiSprite;
    private javax.swing.ButtonGroup buttonGroupTmpxNumText;
    private javax.swing.ButtonGroup buttonGroupTmpxOrigin;
    private javax.swing.ButtonGroup buttonGroupTmpxPetasciiText;
    private javax.swing.ButtonGroup buttonGroupTmpxScreenText;
    private javax.swing.ButtonGroup buttonGroupTmpxShiftText;
    private javax.swing.ButtonGroup buttonGroupTmpxStackWord;
    private javax.swing.ButtonGroup buttonGroupTmpxStarting;
    private javax.swing.ButtonGroup buttonGroupTmpxText;
    private javax.swing.ButtonGroup buttonGroupTmpxTribyte;
    private javax.swing.ButtonGroup buttonGroupTmpxWord;
    private javax.swing.ButtonGroup buttonGroupTmpxWordSwapped;
    private javax.swing.ButtonGroup buttonGroupTmpxZeroText;
    private javax.swing.JLabel jLabelTmpxAddressDeclaration;
    private javax.swing.JLabel jLabelTmpxBlockCommentDeclaration;
    private javax.swing.JLabel jLabelTmpxByteDeclaration;
    private javax.swing.JLabel jLabelTmpxCommentDeclaration;
    private javax.swing.JLabel jLabelTmpxHighTextDeclaration;
    private javax.swing.JLabel jLabelTmpxLabelDeclaration;
    private javax.swing.JLabel jLabelTmpxLongDeclaration;
    private javax.swing.JLabel jLabelTmpxMonoSpriteDeclaration;
    private javax.swing.JLabel jLabelTmpxMultiSpriteDeclaration;
    private javax.swing.JLabel jLabelTmpxNumTextDeclaration;
    private javax.swing.JLabel jLabelTmpxOriginDeclaration;
    private javax.swing.JLabel jLabelTmpxPetasciiTextDeclaration;
    private javax.swing.JLabel jLabelTmpxScreenTextDeclaration;
    private javax.swing.JLabel jLabelTmpxShiftTextDeclaration;
    private javax.swing.JLabel jLabelTmpxStackWordDeclaration;
    private javax.swing.JLabel jLabelTmpxStartingDeclaration;
    private javax.swing.JLabel jLabelTmpxTextDeclaration;
    private javax.swing.JLabel jLabelTmpxTribyteDeclaration;
    private javax.swing.JLabel jLabelTmpxWordDeclaration;
    private javax.swing.JLabel jLabelTmpxWordSwappedDeclaration;
    private javax.swing.JLabel jLabelTmpxZeroTextDeclaration;
    private javax.swing.JRadioButton jRadioButtonTmpxAsterixOrigin;
    private javax.swing.JRadioButton jRadioButtonTmpxByteBinMonoSprite;
    private javax.swing.JRadioButton jRadioButtonTmpxByteBinMultiSprite;
    private javax.swing.JRadioButton jRadioButtonTmpxByteHexMonoSprite;
    private javax.swing.JRadioButton jRadioButtonTmpxByteHexMultiSprite;
    private javax.swing.JRadioButton jRadioButtonTmpxDotAddrAddress;
    private javax.swing.JRadioButton jRadioButtonTmpxDotByte;
    private javax.swing.JRadioButton jRadioButtonTmpxDotIfBlockComment;
    private javax.swing.JRadioButton jRadioButtonTmpxDotNullZeroText;
    private javax.swing.JRadioButton jRadioButtonTmpxDotPetasciiText;
    private javax.swing.JRadioButton jRadioButtonTmpxDotRdaStackWord;
    private javax.swing.JRadioButton jRadioButtonTmpxDotScreenText;
    private javax.swing.JRadioButton jRadioButtonTmpxDotShiflShiftText;
    private javax.swing.JRadioButton jRadioButtonTmpxDotShiftHighText;
    private javax.swing.JRadioButton jRadioButtonTmpxDotText;
    private javax.swing.JRadioButton jRadioButtonTmpxDotWord;
    private javax.swing.JRadioButton jRadioButtonTmpxFakeStarting;
    private javax.swing.JRadioButton jRadioButtonTmpxLabelName;
    private javax.swing.JRadioButton jRadioButtonTmpxMacroBinMonoSprite;
    private javax.swing.JRadioButton jRadioButtonTmpxMacroBinMultiSprite;
    private javax.swing.JRadioButton jRadioButtonTmpxMacroHexMonoSprite;
    private javax.swing.JRadioButton jRadioButtonTmpxMacroHexMultiSprite;
    private javax.swing.JRadioButton jRadioButtonTmpxMacroLong;
    private javax.swing.JRadioButton jRadioButtonTmpxMacroTribyte;
    private javax.swing.JRadioButton jRadioButtonTmpxMacroWordSwapped;
    private javax.swing.JRadioButton jRadioButtonTmpxPTextNumText;
    private javax.swing.JRadioButton jRadioButtonTmpxSemicolonBlockComment;
    private javax.swing.JRadioButton jRadioButtonTmpxSemicolonComment;
    private javax.swing.JScrollPane jScrollPaneTmpxAsterixOrigin;
    private javax.swing.JScrollPane jScrollPaneTmpxByte;
    private javax.swing.JScrollPane jScrollPaneTmpxByteBinMonoSprite;
    private javax.swing.JScrollPane jScrollPaneTmpxByteBinMultiSprite;
    private javax.swing.JScrollPane jScrollPaneTmpxByteHexMonoSprite;
    private javax.swing.JScrollPane jScrollPaneTmpxByteHexMultiSprite;
    private javax.swing.JScrollPane jScrollPaneTmpxDotAddrAddress;
    private javax.swing.JScrollPane jScrollPaneTmpxDotIfBlockComment;
    private javax.swing.JScrollPane jScrollPaneTmpxDotNullZeroText;
    private javax.swing.JScrollPane jScrollPaneTmpxDotPetasciiText;
    private javax.swing.JScrollPane jScrollPaneTmpxDotRtaStackWord;
    private javax.swing.JScrollPane jScrollPaneTmpxDotScreenText;
    private javax.swing.JScrollPane jScrollPaneTmpxDotShiftHighText;
    private javax.swing.JScrollPane jScrollPaneTmpxDotShiftlShiftText;
    private javax.swing.JScrollPane jScrollPaneTmpxDotText;
    private javax.swing.JScrollPane jScrollPaneTmpxDotTextNumText;
    private javax.swing.JScrollPane jScrollPaneTmpxDotWord;
    private javax.swing.JScrollPane jScrollPaneTmpxFakeStarting;
    private javax.swing.JScrollPane jScrollPaneTmpxMacroBinMonoSprite;
    private javax.swing.JScrollPane jScrollPaneTmpxMacroBinMultiSprite;
    private javax.swing.JScrollPane jScrollPaneTmpxMacroHexMonoSprite;
    private javax.swing.JScrollPane jScrollPaneTmpxMacroHexMultiSprite;
    private javax.swing.JScrollPane jScrollPaneTmpxMacroLong;
    private javax.swing.JScrollPane jScrollPaneTmpxMacroTribyte;
    private javax.swing.JScrollPane jScrollPaneTmpxMacroWordSwapped;
    private javax.swing.JScrollPane jScrollPaneTmpxSemicolonBlockComment;
    private javax.swing.JScrollPane jScrollPaneTmpxSemicolonComment;
    private javax.swing.JScrollPane jScrollPaneTmpxWord;
    private javax.swing.JTextPane jTextPaneTmpxAsterixOrigin;
    private javax.swing.JTextPane jTextPaneTmpxByteBinMonoSprite;
    private javax.swing.JTextPane jTextPaneTmpxByteBinMultiSprite;
    private javax.swing.JTextPane jTextPaneTmpxByteHexMonoSprite;
    private javax.swing.JTextPane jTextPaneTmpxDotAddrAddress;
    private javax.swing.JTextPane jTextPaneTmpxDotByte;
    private javax.swing.JTextPane jTextPaneTmpxDotIfBlockComment;
    private javax.swing.JTextPane jTextPaneTmpxDotNullZeroText;
    private javax.swing.JTextPane jTextPaneTmpxDotPetasciiText;
    private javax.swing.JTextPane jTextPaneTmpxDotRtaStackWord;
    private javax.swing.JTextPane jTextPaneTmpxDotScreenText;
    private javax.swing.JTextPane jTextPaneTmpxDotShiflShiftText;
    private javax.swing.JTextPane jTextPaneTmpxDotShiftHighText;
    private javax.swing.JTextPane jTextPaneTmpxDotText;
    private javax.swing.JTextPane jTextPaneTmpxDotTextNumText;
    private javax.swing.JTextPane jTextPaneTmpxDotWord;
    private javax.swing.JTextPane jTextPaneTmpxFakeStarting;
    private javax.swing.JTextPane jTextPaneTmpxLabelName;
    private javax.swing.JTextPane jTextPaneTmpxMacroBinMonoSprite;
    private javax.swing.JTextPane jTextPaneTmpxMacroBinMultiSprite;
    private javax.swing.JTextPane jTextPaneTmpxMacroHexMonoSprite;
    private javax.swing.JTextPane jTextPaneTmpxMacroHexMultiSprite;
    private javax.swing.JTextPane jTextPaneTmpxMacroLong;
    private javax.swing.JTextPane jTextPaneTmpxMacroTribyte;
    private javax.swing.JTextPane jTextPaneTmpxMacroWordSwapped;
    private javax.swing.JTextPane jTextPaneTmpxSemicolonBlockComment;
    private javax.swing.JTextPane jTextPaneTmpxSemicolonComment;
    // End of variables declaration//GEN-END:variables

 /**
   * Apply the option for TMPx
   */
  public void applyOptionTmpx() {
    switch (option.tmpxStarting) {
      case FAKE:
        jRadioButtonTmpxFakeStarting.setSelected(true);   
        break;
    }
      
    switch (option.tmpxOrigin) {                     
      case ASTERISK:
        jRadioButtonTmpxAsterixOrigin.setSelected(true);
        break;                 
    }
      
    switch (option.tmpxComment) {
      case SEMICOLON:
        jRadioButtonTmpxSemicolonComment.setSelected(true);
        break;
    }      
      
    switch (option.tmpxBlockComment) {
      case SEMICOLON:
        jRadioButtonTmpxSemicolonBlockComment.setSelected(true);
        break;
      case DOT_IF:
        jRadioButtonTmpxDotIfBlockComment.setSelected(true);  
        break;           
    }   
      
    switch (option.tmpxLabel) {
      case NAME:
        jRadioButtonTmpxLabelName.setSelected(true);
        break;
    }
            
    switch (option.tmpxByte) {
      case DOT_BYTE:  
        jRadioButtonTmpxDotByte.setSelected(true);
        break; 
    }
    
    switch (option.tmpxWord) {
      case DOT_WORD:  
        jRadioButtonTmpxDotWord.setSelected(true);
        break;           
    }     
    
    switch (option.tmpxWordSwapped) { 
      case MACRO4_WORD_SWAPPED:
        jRadioButtonTmpxMacroWordSwapped.setSelected(true);  
        break;    
    }
    
    switch (option.tmpxTribyte) {
      case MACRO4_TRIBYTE:  
        jRadioButtonTmpxMacroTribyte.setSelected(true);
        break;  
    }
    
    switch (option.tmpxLong) {
      case MACRO4_LONG:  
        jRadioButtonTmpxMacroLong.setSelected(true);
        break;  
    }
    
    switch (option.tmpxAddress) {
      case DOT_ADDR_ADDR:  
        jRadioButtonTmpxDotAddrAddress.setSelected(true);
        break;           
    } 
    
    switch (option.tmpxStackWord) {
      case DOT_RTA_STACKWORD:
        jRadioButtonTmpxDotRdaStackWord.setSelected(true);
        break;
    }
    
    switch (option.tmpxMonoSprite) {
      case BYTE_HEX:
        jRadioButtonTmpxByteHexMonoSprite.setSelected(true);
        break;
      case BYTE_BIN:
        jRadioButtonTmpxByteBinMonoSprite.setSelected(true);
        break;
      case MACRO_HEX:
        jRadioButtonTmpxMacroHexMonoSprite.setSelected(true);
        break;  
      case MACRO_BIN:
        jRadioButtonTmpxMacroBinMonoSprite.setSelected(true);
        break;  
    }
    
    switch (option.tmpxMultiSprite) {
      case BYTE_HEX:
        jRadioButtonTmpxByteHexMultiSprite.setSelected(true);
        break;
      case BYTE_BIN:
        jRadioButtonTmpxByteBinMultiSprite.setSelected(true);
        break;
      case MACRO4_HEX:
        jRadioButtonTmpxMacroHexMultiSprite.setSelected(true);
        break;  
      case MACRO4_BIN:
        jRadioButtonTmpxMacroBinMultiSprite.setSelected(true);
        break;  
    }  
    
    switch (option.tmpxText) {
      case DOT_TEXT:  
        jRadioButtonTmpxDotText.setSelected(true);
        break;           
    }  
    
    switch (option.tmpxNumText) {
      case DOT_PTEXT_NUMTEXT:  
        jRadioButtonTmpxPTextNumText.setSelected(true);
        break;           
    }  
    
    switch (option.tmpxZeroText) {
      case DOT_NULL_ZEROTEXT:  
        jRadioButtonTmpxDotNullZeroText.setSelected(true);
        break;           
    }  
    
    switch (option.tmpxHighText) {
      case DOT_SHIFT_HIGHTEXT:  
        jRadioButtonTmpxDotShiftHighText.setSelected(true);
        break;           
    }    
    
    switch (option.tmpxShiftText) {
      case DOT_SHIFTL_SHIFTTEXT:  
        jRadioButtonTmpxDotShiflShiftText.setSelected(true);
        break;           
    }  
    
    switch (option.tmpxScreenText) {
      case DOT_TEXT_SCREENTEXT:  
        jRadioButtonTmpxDotScreenText.setSelected(true);
        break;           
    } 
        
    switch (option.tmpxPetasciiText) {
      case DOT_TEXT_PETASCIITEXT:  
        jRadioButtonTmpxDotPetasciiText.setSelected(true);
        break;           
    }     
  }

}
